var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddDisc.html",[0,0.015,1,1.03]],["body/classes/AddDisc.html",[0,0.027,1,1.433,2,1.353,3,0.305,4,0.265,5,0.265,6,1.471,7,0.438,8,0.951,9,1.683,10,1.941,11,1.967,12,2.725,13,0.834,14,1.062,15,1.756,16,1.813,17,0.986,18,4.469,19,0.767,20,0.032,21,0.59,22,0.767,23,3.313,24,1.22,25,1.062,26,1.062,27,0.995,28,1.683,29,1.622,30,0.348,31,1.433,32,1.552,33,1.353,34,0.549,35,1.151,36,1.363,37,1.433,38,2.511,39,1.062,40,1.062,41,0.905,42,1.062,43,0.834,44,1.062,45,1.22,46,1.062,47,1.062,48,1.604,49,1.151,50,1.062,51,1.247,52,0.021,53,0.021]],["title/components/AppComponent.html",[54,0.744,55,1.116]],["body/components/AppComponent.html",[0,0.017,3,0.34,4,0.294,5,0.294,13,0.487,14,1.181,17,0.718,19,0.853,20,0.031,21,0.95,22,0.853,27,0.597,30,0.503,34,0.34,52,0.023,53,0.023,54,1.235,55,1.961,56,2.13,57,1.784,58,1.784,59,1.784,60,1.784,61,3.081,62,1.784,63,2.176,64,2.009,65,4.01,66,2.322,67,5.331,68,2.322,69,4.795,70,3.081,71,4.723,72,3.684,73,2.542,74,0.718,75,2.387,76,2.387,77,3.081,78,3.684,79,3.684,80,1.784,81,2.322,82,2.322,83,1.784,84,2.735,85,1.784,86,1.784,87,1.28,88,1.784,89,1.28,90,1.637,91,2.322,92,1.181,93,1.784,94,1.181,95,1.784,96,1.28,97,1.784,98,1.28,99,1.784,100,1.784,101,1.784]],["title/modules/AppModule.html",[102,1.313,103,2.082]],["body/modules/AppModule.html",[0,0.016,3,0.328,4,0.284,5,0.284,20,0.032,30,0.665,34,0.328,41,0.973,52,0.022,53,0.022,55,2.214,64,1.142,74,0.695,103,4.103,104,1.582,105,2.272,106,2.979,107,2.979,108,2.979,109,2.979,110,3.471,111,3.471,112,2.738,113,2.079,114,3.563,115,3.04,116,2.738,117,4.691,118,2.738,119,4.691,120,3.923,121,2.595,122,4.691,123,3.563,124,3.563,125,1.456,126,3.563,127,2.979,128,3.923,129,3.563,130,3.563,131,3.563,132,3.563,133,3.563,134,2.738,135,3.563,136,2.079,137,3.563,138,3.563,139,3.563,140,3.563,141,3.563]],["title/modules/AppRoutingModule.html",[102,1.313,110,1.876]],["body/modules/AppRoutingModule.html",[0,0.018,3,0.358,4,0.31,5,0.31,20,0.032,27,0.886,30,0.605,34,0.358,52,0.024,53,0.024,54,1.149,64,1.59,74,0.757,92,1.59,94,1.59,102,2.027,104,1.725,110,2.895,116,2.266,118,2.895,142,3.883,143,3.883,144,1.349,145,4.961,146,4.961,147,4.149,148,5.466,149,5.76,150,3.362,151,4.196,152,4.961,153,2.266,154,3.883,155,3.883,156,3.883,157,5.466,158,3.883,159,3.883,160,3.883,161,3.883,162,3.883,163,2.516,164,2.829]],["title/injectables/AppState.html",[136,1.876,165,1.313]],["body/injectables/AppState.html",[0,0.015,3,0.301,4,0.261,5,0.261,7,0.433,10,1.42,11,1.611,13,0.586,17,0.864,19,1.026,20,0.032,21,0.895,22,1.026,30,0.527,34,0.408,36,1.115,43,1.46,52,0.021,53,0.021,63,1.745,64,1.048,74,0.638,125,1.336,136,2.586,165,1.81,166,2.119,167,2.382,168,1.968,169,4.43,170,3.146,171,3.705,172,3.489,173,3.227,174,3.27,175,2.299,176,2.87,177,3.143,178,4.504,179,3.911,180,3.255,181,1.745,182,3.27,183,3.489,184,2.734,185,3.705,186,3.27,187,2.87,188,2.87,189,1.583,190,2.119,191,2.382,192,1.583,193,3.66,194,2.119,195,1.908,196,1.336,197,2.734,198,2.87,199,1.733,200,2.734,201,2.734,202,2.734,203,3.227,204,2.734]],["title/interfaces/AppStateModel.html",[172,2.082,192,1.556]],["body/interfaces/AppStateModel.html",[0,0.017,3,0.336,4,0.291,5,0.291,7,0.483,8,1.014,10,1.528,11,1.17,13,0.483,20,0.032,21,0.65,30,0.557,34,0.439,36,0.918,43,1.469,52,0.023,53,0.023,63,1.655,64,1.17,74,0.711,125,1.491,136,2.13,165,1.947,167,2.658,170,2.813,171,3.051,172,3.438,175,2.385,176,2.364,177,2.781,178,3.985,179,3.782,180,3.088,181,1.267,183,3.088,185,3.051,187,2.364,188,2.364,190,2.364,191,2.658,192,1.767,193,4.361,194,2.364,195,2.13,196,1.491,197,3.051,198,3.088,199,1.934,200,3.051,201,3.051,202,3.051,203,3.471,204,3.051,205,2.658]],["title/components/DiscComponent.html",[54,0.744,87,1.116]],["body/components/DiscComponent.html",[0,0.015,3,0.293,4,0.254,5,0.254,7,0.421,13,0.655,17,0.966,20,0.031,21,0.774,24,0.868,25,1.588,26,1.588,27,0.516,29,1.845,30,0.334,34,0.293,45,1.522,52,0.021,53,0.021,54,1.291,55,1.105,56,1.931,57,1.54,58,1.54,59,1.54,60,1.54,62,1.54,63,2.113,64,1.95,66,2.105,68,2.105,74,0.62,80,1.54,81,2.105,82,2.105,83,1.54,84,2.578,85,1.54,86,1.54,87,1.849,88,1.54,89,1.105,90,1.413,91,2.105,92,1.02,93,1.54,94,1.02,95,1.54,96,1.105,97,1.54,98,1.105,99,1.54,100,1.54,101,1.54,144,1.105,175,1.776,188,3.449,195,3.107,206,2.66,207,2.891,208,4.953,209,4.347,210,3.635,211,4.953,212,5.323,213,3.18,214,4.347,215,3.18,216,3.18,217,4.347,218,1.686,219,3.167,220,1.686,221,3.209,222,3.18,223,2.66,224,2.317,225,2.317,226,2.66,227,2.66,228,2.66,229,2.66,230,4.347]],["title/components/EndGameDialogComponent.html",[54,0.744,89,1.116]],["body/components/EndGameDialogComponent.html",[0,0.011,3,0.227,4,0.197,5,0.197,7,0.326,8,0.772,9,1.992,13,0.7,14,1.163,17,0.926,19,0.571,20,0.032,21,0.767,22,0.571,24,0.673,27,1.029,29,0.79,30,0.452,34,0.227,45,0.673,52,0.017,53,0.017,54,1.172,55,0.856,56,1.611,57,1.193,58,1.193,59,1.193,60,1.193,62,1.193,63,1.99,64,1.837,66,1.756,68,1.756,73,2.976,74,0.481,80,1.193,81,1.756,82,1.756,83,1.193,84,2.299,85,1.193,86,1.193,87,0.856,88,1.193,89,1.649,90,2.493,91,1.756,92,0.79,93,1.193,94,0.79,95,1.193,96,0.856,97,1.193,98,0.856,99,1.193,100,1.193,101,1.193,144,0.856,150,2.117,151,2.642,153,1.438,168,1.611,173,1.795,175,1.007,181,0.856,189,1.193,196,1.482,207,2.117,218,2.281,220,2.516,221,1.597,224,1.795,225,1.795,231,4.231,232,3.278,233,1.795,234,3.088,235,3.627,236,3.033,237,3.599,238,3.033,239,3.969,240,5.059,241,4.746,242,2.464,243,3.599,244,3.985,245,5.059,246,2.061,247,2.464,248,3.627,249,2.464,250,2.061,251,2.464,252,2.464,253,1.306,254,2.061,255,1.597,256,2.061,257,2.464,258,3.627,259,3.627,260,3.627,261,3.627,262,3.033,263,2.642,264,1.795,265,1.597,266,3.033,267,2.061,268,2.117,269,1.597,270,1.193,271,1.795,272,1.597,273,1.597,274,3.033,275,2.061,276,2.061,277,1.795,278,2.061,279,2.061,280,2.061,281,2.061,282,1.597,283,1.597]],["title/components/GameComponent.html",[54,0.744,92,1.03]],["body/components/GameComponent.html",[0,0.007,1,0.463,3,0.22,4,0.115,5,0.115,7,0.403,8,0.507,9,1.147,13,0.716,14,0.764,16,1.257,17,1.071,19,0.706,20,0.032,21,0.698,22,0.706,24,0.651,25,1.353,26,1.353,27,0.877,28,1.147,29,0.977,30,0.524,31,1.6,32,1.88,34,0.133,36,0.6,37,1.553,39,0.764,45,0.651,46,0.764,47,0.463,49,1.85,50,0.463,51,1.147,52,0.011,53,0.011,54,0.706,55,0.501,56,1.059,57,0.699,58,0.699,59,0.699,60,0.699,62,0.699,63,1.682,64,1.553,66,1.155,68,1.155,73,1.264,74,0.281,80,0.699,81,1.155,82,1.155,83,0.699,84,1.714,85,0.699,86,0.699,87,0.501,88,0.699,89,0.828,90,1.572,91,1.155,92,1.135,93,0.699,94,0.463,95,0.699,96,0.828,97,0.699,98,0.501,99,0.699,100,0.699,101,0.699,125,0.589,144,0.828,168,1.059,175,1.725,177,1.392,181,0.828,189,1.155,196,1.245,199,1.877,207,2.288,218,2.476,219,3.075,220,2.238,221,0.935,224,1.051,225,1.051,226,1.994,227,1.207,228,1.207,229,1.207,232,0.935,234,2.607,236,1.994,239,1.207,253,0.765,254,2.96,255,1.975,262,2.96,263,1.737,264,1.737,265,1.545,268,2.827,269,1.545,270,1.714,271,1.051,272,2.294,273,2.735,274,1.994,277,2.22,283,0.935,284,1.207,285,3.047,286,2.384,287,2.895,288,2.384,289,2.384,290,1.443,291,2.735,292,3.254,293,3.047,294,3.54,295,2.855,296,2.384,297,2.384,298,1.443,299,1.545,300,1.994,301,1.443,302,2.384,303,2.384,304,1.443,305,2.96,306,2.384,307,1.994,308,1.443,309,4.28,310,1.443,311,1.443,312,1.443,313,1.443,314,2.549,315,1.443,316,1.443,317,1.737,318,1.443,319,1.443,320,2.288,321,1.443,322,1.443,323,1.051,324,1.051,325,1.051,326,1.207,327,1.545,328,1.443,329,1.207,330,1.051,331,0.842,332,3.54,333,3.278,334,1.443,335,1.443,336,2.384,337,1.443,338,1.443,339,3.919,340,1.443,341,1.443,342,3.047,343,1.443,344,1.443,345,1.994,346,1.207,347,1.207,348,1.155,349,1.443,350,2.549,351,1.443,352,1.207,353,2.384,354,1.443,355,2.066,356,2.238,357,1.443,358,2.384,359,1.443,360,1.443,361,1.051,362,1.443,363,1.443,364,1.443,365,1.443,366,1.443,367,1.443,368,1.443,369,0.935,370,1.443,371,1.443,372,1.443,373,1.443,374,1.443,375,1.443,376,0.935,377,1.443,378,1.443,379,1.443,380,1.443,381,1.207,382,1.207,383,1.737,384,1.994,385,2.579,386,2.384,387,2.384,388,1.994,389,1.207,390,1.443,391,2.384,392,2.549,393,1.994,394,2.549,395,1.443,396,1.443,397,1.443,398,1.443,399,1.443,400,1.207,401,1.443,402,1.443]],["title/modules/GameModule.html",[102,1.313,403,2.082]],["body/modules/GameModule.html",[0,0.016,3,0.328,4,0.284,5,0.284,20,0.032,27,0.903,30,0.646,34,0.328,41,0.971,52,0.022,53,0.022,74,0.693,87,2.064,89,2.213,90,1.579,92,2.043,102,1.914,104,1.579,105,2.268,112,2.734,113,2.074,115,3.035,116,2.734,118,2.734,144,1.235,164,3.412,232,2.303,327,2.303,403,4.171,404,2.972,405,2.972,406,2.972,407,2.972,408,3.151,409,3.554,410,3.412,411,2.303,412,3.554,413,3.412,414,2.589,415,2.972,416,3.412,417,2.589,418,3.554]],["title/injectables/GameService.html",[165,1.313,291,2.082]],["body/injectables/GameService.html",[0,0.014,3,0.289,4,0.251,5,0.251,7,0.415,13,0.57,16,1.882,17,0.84,19,0.998,20,0.032,21,0.768,22,0.998,30,0.33,34,0.289,37,2.003,39,1.917,49,1.927,52,0.02,53,0.02,65,2.626,74,0.612,144,1.497,163,3.188,165,1.761,166,2.035,168,1.914,175,2.342,177,3.091,181,1.839,196,1.283,199,2.807,291,2.793,305,4.429,320,3.239,348,2.383,352,2.626,356,1.665,376,2.035,419,2.626,420,4.31,421,4.31,422,4.31,423,3.14,424,3.14,425,3.14,426,4.31,427,3.858,428,3.14,429,3.604,430,4.115,431,3.604,432,4.429,433,4.429,434,3.604,435,5.295,436,4.31,437,3.14,438,4.92,439,5.295,440,4.92,441,4.31,442,2.035]],["title/injectables/GameState.html",[134,1.876,165,1.313]],["body/injectables/GameState.html",[0,0.008,1,1.509,3,0.15,4,0.13,5,0.13,7,0.216,10,1.571,11,1.622,13,0.687,16,0.522,17,1.013,19,1.204,20,0.032,21,0.947,22,1.204,24,0.719,27,0.82,28,0.992,29,1.509,30,0.4,31,1.509,32,0.915,33,0.666,34,0.243,35,1.634,36,1.233,37,1.765,39,1.666,40,1.221,41,0.719,42,1.509,43,1.125,44,1.509,45,1.221,46,1.221,47,1.221,49,1.553,50,1.221,51,1.683,52,0.013,53,0.013,63,1.634,74,0.318,125,0.666,134,1.537,163,1.056,165,1.076,166,1.056,168,1.17,173,3.785,176,1.707,180,3.049,181,1.912,183,3.882,184,3.496,189,2.279,190,1.056,192,0.789,194,1.056,196,1.354,198,3.618,199,2.216,270,1.605,287,2.148,299,1.707,317,1.919,320,2.747,348,1.844,355,1.537,356,1.757,361,1.919,369,1.056,376,1.056,427,1.919,442,2.467,443,1.187,444,2.634,445,2.634,446,2.634,447,2.772,448,1.629,449,2.203,450,1.629,451,3.257,452,2.203,453,2.203,454,3.367,455,1.629,456,2.203,457,1.629,458,2.203,459,2.203,460,1.919,461,2.203,462,1.629,463,1.629,464,2.203,465,1.629,466,1.629,467,2.203,468,1.629,469,2.203,470,1.629,471,2.203,472,1.629,473,1.629,474,2.203,475,1.629,476,1.629,477,2.203,478,1.629,479,2.774,480,1.707,481,1.629,482,2.203,483,1.629,484,2.203,485,1.187,486,2.203,487,2.203,488,1.187,489,1.363,490,1.363,491,2.203,492,1.363,493,1.363,494,3.496,495,2.203,496,1.363,497,1.363,498,1.363,499,1.363,500,2.203,501,2.203,502,1.363,503,2.203,504,1.363,505,0.951,506,1.363,507,2.772,508,1.363]],["title/interfaces/GameStateModel.html",[192,1.556,454,2.082]],["body/interfaces/GameStateModel.html",[0,0.01,1,1.267,3,0.197,4,0.171,5,0.171,7,0.283,8,0.694,10,1.724,11,1.267,13,0.63,16,1.267,20,0.032,21,0.381,24,0.583,27,0.771,28,0.804,29,1.417,30,0.464,31,1.833,32,1.535,33,0.873,34,0.3,35,1.372,36,1.112,37,1.859,39,1.802,40,1.045,41,0.583,42,1.267,43,0.994,44,1.267,45,1.079,46,1.045,47,1.045,49,1.868,50,1.045,51,2.025,52,0.015,53,0.015,63,1.535,74,0.417,125,0.873,134,1.247,163,1.384,165,1.331,176,1.384,180,2.864,181,1.372,183,3.485,190,1.384,192,1.035,194,1.384,196,1.614,198,3.842,199,2.523,205,1.556,270,1.578,287,3.25,299,1.384,317,2.374,320,2.927,348,1.578,355,1.902,356,2.095,361,1.556,369,1.384,376,1.384,427,2.374,442,2.112,443,1.556,447,1.787,449,1.787,451,2.878,452,1.787,453,1.787,454,3.084,456,1.787,458,1.787,459,1.787,460,1.556,461,1.787,464,1.787,467,1.787,469,1.787,471,1.787,474,1.787,477,1.787,479,2.374,480,1.384,482,1.787,484,1.787,485,1.556,486,2.726,487,2.726,488,1.556,489,1.787,490,1.787,491,2.726,492,1.787,493,1.787,494,3.98,495,2.726,496,1.787,497,1.787,498,1.787,499,1.787,500,2.726,501,2.726,502,1.787,503,2.726,504,1.787,505,1.247,506,1.787,507,3.304,508,1.787]],["title/components/HomeComponent.html",[54,0.744,94,1.03]],["body/components/HomeComponent.html",[0,0.012,3,0.24,4,0.208,5,0.208,7,0.344,8,0.803,9,1.671,13,0.587,14,1.209,17,0.865,19,0.874,20,0.032,21,0.867,22,0.874,27,0.902,30,0.566,31,0.834,34,0.24,37,1.209,40,1.209,42,0.834,43,0.949,52,0.018,53,0.018,54,1.198,55,0.903,56,1.675,57,1.259,58,1.259,59,1.259,60,1.259,62,1.259,63,2.017,64,1.862,66,1.827,68,1.827,73,2.858,74,0.507,80,1.259,81,1.827,82,1.827,83,1.259,84,2.358,85,1.259,86,1.259,87,0.903,88,1.259,89,0.903,90,1.155,91,1.827,92,0.834,93,1.259,94,1.561,95,1.259,96,0.903,97,1.259,98,0.903,99,1.259,100,1.259,101,1.259,125,1.062,144,0.903,150,2.591,153,1.517,168,1.675,175,1.989,177,2.201,181,0.903,189,1.259,207,1.517,218,2,219,2.748,220,2,234,3.017,244,3.928,253,1.378,255,2.444,265,1.685,268,2.201,269,1.685,270,1.259,272,1.685,273,1.685,292,4.052,295,3.766,314,2.174,326,2.174,329,2.174,348,1.259,383,1.894,388,2.174,389,2.174,392,2.174,400,2.174,479,2.748,480,2.444,488,1.894,505,2.201,509,2.174,510,4.438,511,3.772,512,3.772,513,2.6,514,2.6,515,3.772,516,2.6,517,4.869,518,3.772,519,2.748,520,3.772,521,2.6,522,2.6,523,2.6,524,2.6,525,2.6,526,2.6,527,3.772,528,3.772,529,3.772,530,2.6,531,2.6,532,2.6,533,2.6]],["title/modules/HomeModule.html",[102,1.313,111,1.876]],["body/modules/HomeModule.html",[0,0.016,3,0.32,4,0.277,5,0.277,20,0.032,30,0.677,34,0.32,41,0.948,52,0.022,53,0.022,74,0.677,94,1.893,102,1.884,104,1.542,105,2.234,111,3.571,112,2.692,113,2.027,115,2.989,116,2.692,118,2.692,144,1.206,150,2.692,253,1.841,323,2.53,324,2.53,408,3.13,410,3.36,411,2.25,413,3.36,414,2.53,415,2.904,416,3.36,417,2.53,534,2.904,535,3.472,536,2.904,537,3.472,538,3.857,539,2.904,540,3.857,541,2.904,542,2.53,543,3.857,544,3.857,545,2.904,546,3.857,547,2.904,548,3.857,549,3.857,550,2.904,551,3.857,552,2.904,553,3.857,554,2.904,555,2.904,556,3.472]],["title/classes/NextTurn.html",[0,0.015,47,1.03]],["body/classes/NextTurn.html",[0,0.028,1,1.113,2,1.419,3,0.32,4,0.277,5,0.277,6,1.542,7,0.459,8,0.982,10,1.841,11,1.986,12,2.751,13,0.827,16,1.479,17,0.677,20,0.032,24,1.259,25,1.113,26,1.113,27,1.004,28,1.307,29,1.479,30,0.365,31,1.479,32,1.602,33,1.419,34,0.555,35,1.206,36,1.389,37,1.479,38,2.551,39,1.113,40,1.113,41,0.948,42,1.113,43,0.874,44,1.113,45,1.259,46,1.113,47,1.479,48,2.234,49,1.602,50,1.113,51,1.307,52,0.022,53,0.022,557,3.472]],["title/classes/ResetBoard.html",[0,0.015,40,1.03]],["body/classes/ResetBoard.html",[0,0.028,1,1.113,2,1.419,3,0.32,4,0.277,5,0.277,6,1.542,7,0.459,8,0.982,10,1.841,11,1.986,12,2.751,13,0.827,16,1.479,17,0.677,20,0.032,24,1.259,25,1.113,26,1.113,27,1.004,28,1.307,29,1.479,30,0.365,31,1.479,32,1.602,33,1.419,34,0.555,35,1.206,36,1.389,37,1.66,38,2.551,39,1.113,40,1.479,41,1.259,42,1.113,43,0.874,44,1.113,45,1.259,46,1.113,47,1.113,48,1.682,49,1.206,50,1.113,51,1.307,52,0.022,53,0.022,558,3.472]],["title/classes/SetBoard.html",[0,0.015,35,1.116]],["body/classes/SetBoard.html",[0,0.027,1,1.062,2,1.353,3,0.305,4,0.265,5,0.265,6,1.471,7,0.438,8,0.951,9,1.683,10,1.941,11,1.967,12,2.725,13,0.834,14,1.062,15,1.756,16,1.433,17,0.986,19,0.767,20,0.032,21,0.59,22,0.767,24,1.22,25,1.062,26,1.062,27,0.995,28,1.247,29,1.433,30,0.348,31,1.433,32,1.552,33,1.353,34,0.549,35,1.552,36,1.423,37,1.622,38,2.511,39,1.736,40,1.062,41,0.905,42,1.062,43,0.834,44,1.062,45,1.22,46,1.062,47,1.062,48,1.604,49,1.151,50,1.062,51,1.247,52,0.021,53,0.021,559,4.469,560,3.313]],["title/classes/SetDarkMode.html",[0,0.015,170,1.704]],["body/classes/SetDarkMode.html",[0,0.02,2,1.729,3,0.39,4,0.338,5,0.338,7,0.56,8,1.114,9,1.971,10,1.905,11,1.823,12,2.526,13,0.823,14,1.357,15,2.243,17,1.109,19,0.98,20,0.031,21,0.754,22,0.98,24,1.155,25,1.357,26,1.357,34,0.39,36,1.318,38,1.879,43,1.318,52,0.025,53,0.025,64,1.679,170,2.776,175,2.427,179,3.393,561,3.539,562,5.236,563,4.231]],["title/classes/SetDiscColor.html",[0,0.015,44,1.03]],["body/classes/SetDiscColor.html",[0,0.027,1,1.053,2,1.342,3,0.303,4,0.262,5,0.262,6,1.459,7,0.434,8,0.945,9,1.673,10,1.937,11,1.963,12,2.72,13,0.847,14,1.053,15,1.741,16,1.424,17,0.982,19,0.761,20,0.032,21,0.585,22,0.761,24,1.213,25,1.053,26,1.053,27,0.993,28,1.236,29,1.614,30,0.345,31,1.424,32,1.543,33,1.342,34,0.548,35,1.141,36,1.419,37,1.424,38,2.504,39,1.053,40,1.053,41,0.897,42,1.053,43,0.827,44,1.424,45,1.375,46,1.053,47,1.053,48,1.59,49,1.141,50,1.053,51,1.236,52,0.021,53,0.021,243,4.211,564,4.443,565,3.284]],["title/classes/SetGameMode.html",[0,0.015,42,1.03]],["body/classes/SetGameMode.html",[0,0.027,1,1.06,2,1.35,3,0.305,4,0.264,5,0.264,6,1.468,7,0.437,8,0.95,9,1.68,10,1.94,11,1.966,12,2.724,13,0.833,14,1.06,15,1.752,16,1.431,17,0.985,19,0.766,20,0.032,21,0.589,22,0.766,24,1.219,25,1.06,26,1.06,27,1.005,28,1.244,29,1.431,30,0.347,31,1.811,32,1.55,33,1.35,34,0.548,35,1.148,36,1.422,37,1.431,38,2.509,39,1.06,40,1.06,41,0.903,42,1.431,43,1.123,44,1.06,45,1.219,46,1.06,47,1.06,48,1.601,49,1.148,50,1.06,51,1.244,52,0.021,53,0.021,566,4.462,567,3.305]],["title/classes/SetStaus.html",[0,0.015,50,1.03]],["body/classes/SetStaus.html",[0,0.027,1,1.062,2,1.353,3,0.305,4,0.265,5,0.265,6,1.471,7,0.438,8,0.951,9,1.683,10,1.941,11,1.967,12,2.725,13,0.834,14,1.062,15,1.756,16,1.433,17,0.986,19,0.767,20,0.032,21,0.59,22,0.767,24,1.22,25,1.062,26,1.062,27,0.995,28,1.247,29,1.433,30,0.348,31,1.433,32,1.964,33,1.353,34,0.549,35,1.151,36,1.423,37,1.433,38,2.511,39,1.062,40,1.062,41,0.905,42,1.062,43,0.834,44,1.062,45,1.22,46,1.062,47,1.062,48,1.604,49,1.151,50,1.433,51,1.683,52,0.021,53,0.021,568,4.469,569,3.313]],["title/components/SettingsDialogComponent.html",[54,0.744,96,1.116]],["body/components/SettingsDialogComponent.html",[0,0.01,3,0.199,4,0.173,5,0.173,7,0.286,8,0.7,13,0.633,14,0.694,16,1.731,17,1.022,19,0.762,20,0.032,21,0.793,22,0.762,25,1.055,26,1.055,27,0.351,30,0.503,34,0.199,36,0.828,39,1.055,43,0.828,44,1.427,45,1.087,46,1.68,52,0.016,53,0.016,54,0.922,55,0.752,56,1.462,57,1.048,58,1.048,59,1.048,60,1.048,62,1.048,63,1.921,64,1.773,66,1.594,68,1.594,73,2.863,74,0.422,77,1.81,80,1.048,81,1.594,82,1.594,83,1.048,84,2.155,85,1.048,86,1.048,87,0.752,88,1.048,89,0.752,90,0.961,91,1.594,92,0.694,93,1.048,94,0.694,95,1.048,96,1.545,97,2.777,98,0.752,99,1.048,100,1.048,101,1.048,125,0.884,144,0.752,168,1.462,170,1.147,179,2.132,181,1.143,187,2.132,189,1.594,191,1.577,193,3.817,195,1.921,203,2.397,207,1.921,218,1.745,220,2.111,221,1.402,233,1.577,234,2.597,237,3.33,238,2.752,246,1.81,250,2.752,263,2.397,264,1.577,265,1.402,266,2.752,267,1.81,268,2.794,269,2.132,270,1.594,271,1.577,272,1.402,273,1.402,275,1.81,276,1.81,277,1.577,278,1.81,279,1.81,280,1.81,281,1.81,282,1.402,283,1.402,287,3.395,292,3.672,309,4.003,325,1.577,330,3.934,331,3.152,333,2.752,345,2.752,346,1.81,347,1.81,348,1.594,350,2.752,355,1.921,356,2.111,369,2.883,385,1.577,393,1.81,394,1.81,451,2.397,460,2.397,485,1.577,570,4.449,571,2.164,572,2.164,573,3.291,574,3.291,575,3.291,576,2.164,577,3.291,578,3.291,579,2.164,580,2.164,581,3.291,582,2.164,583,2.164,584,2.164,585,2.164,586,3.291,587,5.041,588,3.291,589,3.291,590,3.291,591,2.164,592,1.81,593,2.164]],["title/modules/SharedModule.html",[102,1.313,408,1.704]],["body/modules/SharedModule.html",[0,0.014,3,0.276,4,0.239,5,0.239,20,0.032,30,0.675,34,0.385,41,0.818,52,0.02,53,0.02,74,0.584,75,2.704,76,1.942,96,2.153,98,2.153,102,1.705,104,1.331,105,2.021,112,2.436,113,1.749,115,2.704,116,1.749,118,2.436,144,1.041,164,3.04,196,1.224,253,1.589,323,2.183,324,2.183,327,1.942,331,1.749,408,3.224,410,3.04,411,1.942,413,3.04,414,2.183,416,3.04,417,2.183,505,1.749,538,3.49,539,2.506,540,3.49,541,2.506,542,2.183,543,3.49,544,3.49,545,2.506,546,3.49,547,2.506,548,3.49,549,3.49,550,2.506,551,3.49,552,2.506,553,3.49,554,2.506,555,2.506,594,2.506,595,2.506,596,2.506,597,2.183,598,4.173,599,4.015,600,4.173,601,2.997,602,4.173,603,2.997,604,4.173,605,3.49,606,2.506,607,3.49,608,4.173,609,2.997,610,2.997,611,2.506,612,2.997,613,2.997,614,2.997,615,2.183,616,2.997,617,2.506,618,2.506,619,2.997]],["title/components/ToolbarComponent.html",[54,0.744,98,1.116]],["body/components/ToolbarComponent.html",[0,0.011,3,0.216,4,0.187,5,0.187,7,0.309,8,0.742,9,1.571,13,0.612,14,1.118,17,1.049,19,0.808,20,0.032,21,0.824,22,0.808,24,1.417,25,0.75,26,0.75,27,0.379,30,0.52,34,0.216,36,0.878,52,0.017,53,0.017,54,0.967,55,0.812,56,1.55,57,1.132,58,1.132,59,1.132,60,1.132,62,1.132,63,1.963,64,1.872,66,1.689,68,1.689,70,1.956,71,3.869,73,2.931,74,0.456,75,1.515,76,1.515,80,1.132,81,1.689,82,1.689,83,1.132,84,2.241,85,1.132,86,1.132,87,0.812,88,1.132,89,0.812,90,1.039,91,1.689,92,0.75,93,1.132,94,0.75,95,1.132,96,1.212,97,2.021,98,1.607,99,2.021,100,1.132,101,1.132,144,0.812,150,2.036,151,2.541,153,1.365,168,1.55,175,0.955,181,1.719,187,2.26,188,2.26,189,2.021,195,2.036,196,0.955,210,2.917,218,1.24,220,1.849,234,3.139,244,3.918,253,1.24,255,2.26,256,1.956,268,1.365,283,1.515,295,3.606,300,2.917,307,2.917,327,1.515,331,1.365,348,1.132,356,1.849,381,1.956,382,1.956,383,1.703,384,2.917,385,2.541,442,2.26,519,2.541,611,1.956,620,1.956,621,4.173,622,3.488,623,4.626,624,4.626,625,4.626,626,3.488,627,4.173,628,2.338,629,2.338,630,2.338,631,4.949,632,4.626,633,5.528,634,3.488,635,3.488,636,2.338,637,2.338,638,3.488,639,2.338,640,3.488,641,2.338,642,2.338,643,2.338,644,2.338,645,3.488,646,3.488,647,3.488,648,3.488,649,3.488,650,2.338,651,2.338,652,2.338,653,2.338]],["title/coverage.html",[654,3.661]],["body/coverage.html",[0,0.028,1,1.118,5,0.279,6,2.679,13,0.461,20,0.031,27,0.75,35,1.212,40,1.118,42,1.118,44,1.118,47,1.118,50,1.118,52,0.022,53,0.022,54,1.397,55,1.212,61,2.917,87,1.212,89,1.212,92,1.118,94,1.118,96,1.212,98,1.212,134,2.036,136,2.036,165,2.121,167,3.37,170,1.849,172,2.26,192,2.241,206,2.917,223,2.917,231,2.917,232,2.26,233,3.37,284,2.917,291,2.26,320,3.708,330,2.541,331,2.036,419,2.917,443,3.37,454,2.26,505,2.036,509,2.917,561,2.917,597,2.541,615,2.541,617,2.917,620,2.917,654,2.917,655,2.917,656,3.488,657,3.488,658,5.528,659,5.191,660,4.626,661,3.488,662,3.488,663,3.488,664,3.488,665,4.626,666,4.626,667,5.912,668,3.488,669,3.488,670,3.488,671,3.488,672,3.488,673,3.488,674,3.488,675,3.488]],["title/dependencies.html",[105,1.871,676,2.247]],["body/dependencies.html",[20,0.032,52,0.025,53,0.025,74,0.832,75,3.41,76,2.765,105,2.067,120,4.402,121,3.834,125,1.743,127,3.569,128,3.569,153,2.491,325,3.109,411,2.765,606,3.569,607,3.569,677,4.267,678,6.38,679,4.267,680,5.263,681,4.267,682,4.267,683,4.267,684,4.267,685,4.267,686,4.267,687,4.267,688,4.267,689,5.263,690,4.267,691,4.267,692,4.267,693,4.267,694,4.267]],["title/miscellaneous/enumerations.html",[695,1.741,696,3.231]],["body/miscellaneous/enumerations.html",[7,0.653,20,0.027,31,1.841,32,1.995,52,0.027,53,0.027,299,3.199,695,3.199,696,4.128,697,5.743,698,4.936,699,4.936,700,4.936,701,4.936]],["title/miscellaneous/functions.html",[695,1.741,702,3.231]],["body/miscellaneous/functions.html",[7,0.642,13,0.642,19,1.125,20,0.03,21,0.865,22,1.125,52,0.027,53,0.027,181,1.687,597,3.538,599,4.758,605,4.062,615,4.145,618,4.062,695,3.147,702,4.062,703,4.857,704,4.857]],["title/index.html",[7,0.355,705,2.687,706,2.687]],["body/index.html",[4,0.313,20,0.024,27,0.809,43,0.988,45,1.071,46,1.258,52,0.024,53,0.024,147,3.281,270,2.418,282,2.542,429,3.281,430,3.281,431,3.281,432,3.281,433,4.594,434,3.281,480,2.542,519,2.858,542,2.858,592,3.281,655,4.176,707,5.782,708,4.993,709,3.923,710,3.923,711,3.923,712,3.923,713,3.923,714,3.923,715,3.923,716,3.923,717,4.993,718,3.923,719,3.923,720,3.923,721,3.923,722,3.923,723,3.923,724,3.923,725,3.923,726,3.923,727,3.923,728,3.923,729,3.923,730,3.923,731,3.923,732,3.923,733,3.923,734,3.923,735,3.923,736,3.923,737,3.923,738,3.923,739,3.923,740,3.923,741,4.993,742,4.993,743,3.923,744,3.923,745,3.923,746,3.923,747,3.923,748,3.923,749,3.923,750,3.923,751,5.782,752,3.923,753,3.923,754,3.923,755,3.923,756,3.923,757,4.176,758,3.923,759,3.923,760,3.923,761,3.923,762,3.923,763,3.923,764,3.923]],["title/modules.html",[104,1.945]],["body/modules.html",[20,0.027,52,0.027,53,0.027,103,3.088,104,2.117,110,2.781,111,2.781,121,4.505,282,3.088,403,3.088,408,2.526,757,5.172,765,6.184,766,6.31,767,4.765]],["title/overview.html",[768,3.661]],["body/overview.html",[2,1.469,20,0.031,41,0.982,52,0.022,53,0.022,55,2.111,56,1.598,87,1.83,89,2.111,92,1.948,94,1.689,96,2.111,98,2.111,103,4.041,104,1.598,105,2.286,106,3.008,107,3.008,108,3.008,109,3.008,110,3.076,111,3.547,112,2.755,113,2.099,166,2.33,205,2.62,355,2.099,403,4.136,404,3.008,405,3.008,406,3.008,407,3.008,408,3.337,534,3.008,536,3.008,594,3.008,595,3.008,596,3.008,768,3.008,769,3.596,770,3.596,771,3.596,772,3.596]],["title/properties.html",[8,0.822,676,2.247]],["body/properties.html",[8,1.086,20,0.029,52,0.028,53,0.028,773,5.103,774,5.103]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AddDisc.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"modules/SharedModule.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":320,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"coverage.html":{}}}],["0.0.0",{"_index":774,"title":{},"body":{"properties.html":{}}}],["0.12.0",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":670,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":673,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":356,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["1.1.19",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["1/4",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":219,"title":{},"body":{"components/DiscComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{}}}],["100vh",{"_index":383,"title":{},"body":{"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/ToolbarComponent.html":{}}}],["100vw",{"_index":283,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["12",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["14.0.0",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["15.2.0",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["15.2.1",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":265,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["1px",{"_index":226,"title":{},"body":{"components/DiscComponent.html":{},"components/GameComponent.html":{}}}],["2",{"_index":355,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/SettingsDialogComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["2/16",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":669,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":771,"title":{},"body":{"overview.html":{}}}],["3.7.6",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["300px",{"_index":263,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["30px",{"_index":274,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{}}}],["4/8",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":769,"title":{},"body":{"overview.html":{}}}],["50",{"_index":223,"title":{},"body":{"components/DiscComponent.html":{},"coverage.html":{}}}],["600px",{"_index":278,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["64px",{"_index":531,"title":{},"body":{"components/HomeComponent.html":{}}}],["66",{"_index":665,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":770,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["79px",{"_index":390,"title":{},"body":{"components/GameComponent.html":{}}}],["8",{"_index":772,"title":{},"body":{"overview.html":{}}}],["90",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["_snackbar",{"_index":293,"title":{},"body":{"components/GameComponent.html":{}}}],["action",{"_index":190,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["action(adddisc",{"_index":449,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["action(nextturn",{"_index":464,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["action(resetboard",{"_index":467,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["action(setboard",{"_index":471,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["action(setdarkmode",{"_index":185,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{}}}],["action(setdisccolor",{"_index":474,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["action(setgamemode",{"_index":477,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["action(setstaus",{"_index":482,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["actions/app.actions",{"_index":191,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/SettingsDialogComponent.html":{}}}],["actions/game.actions",{"_index":485,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/SettingsDialogComponent.html":{}}}],["actual_component",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["add",{"_index":28,"title":{},"body":{"classes/AddDisc.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{}}}],["adddisc",{"_index":1,"title":{"classes/AddDisc.html":{}},"body":{"classes/AddDisc.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"coverage.html":{}}}],["adddisc(colindex)).subscribe",{"_index":351,"title":{},"body":{"components/GameComponent.html":{}}}],["adddisc(undefined",{"_index":448,"title":{},"body":{"injectables/GameState.html":{}}}],["added",{"_index":502,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["ai",{"_index":480,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["align",{"_index":272,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["angular/animations",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":411,"title":{},"body":{"modules/GameModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":601,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/compiler",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/SettingsDialogComponent.html":{},"modules/SharedModule.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":417,"title":{},"body":{"modules/GameModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":545,"title":{},"body":{"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/dialog",{"_index":253,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"components/ToolbarComponent.html":{}}}],["angular/material/grid",{"_index":554,"title":{},"body":{"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":414,"title":{},"body":{"modules/GameModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":552,"title":{},"body":{"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/menu",{"_index":609,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/radio",{"_index":547,"title":{},"body":{"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/slide",{"_index":541,"title":{},"body":{"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/snack",{"_index":323,"title":{},"body":{"components/GameComponent.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/stepper",{"_index":550,"title":{},"body":{"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/toolbar",{"_index":539,"title":{},"body":{"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["angular/platform",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EndGameDialogComponent.html":{},"components/HomeComponent.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":211,"title":{},"body":{"components/DiscComponent.html":{}}}],["app",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"classes/SetDarkMode.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["app.component",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["app.game.draw",{"_index":259,"title":{},"body":{"components/EndGameDialogComponent.html":{}}}],["app.game.game_over",{"_index":258,"title":{},"body":{"components/EndGameDialogComponent.html":{}}}],["app.game.home",{"_index":261,"title":{},"body":{"components/EndGameDialogComponent.html":{}}}],["app.game.player_turn",{"_index":387,"title":{},"body":{"components/GameComponent.html":{}}}],["app.game.winner_is",{"_index":260,"title":{},"body":{"components/EndGameDialogComponent.html":{}}}],["app.home.choose_game_mode",{"_index":527,"title":{},"body":{"components/HomeComponent.html":{}}}],["app.home.connect_four",{"_index":645,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["app.home.one_versus_ai",{"_index":529,"title":{},"body":{"components/HomeComponent.html":{}}}],["app.home.one_versus_one",{"_index":528,"title":{},"body":{"components/HomeComponent.html":{}}}],["app.settings",{"_index":587,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["app.settings.custom_your_view",{"_index":586,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["app.toolbar.english",{"_index":647,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["app.toolbar.french",{"_index":646,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["appcomponent",{"_index":55,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":746,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":103,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":110,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appstate",{"_index":136,"title":{"injectables/AppState.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"coverage.html":{}}}],["appstatemodel",{"_index":172,"title":{"interfaces/AppStateModel.html":{}},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"coverage.html":{}}}],["around",{"_index":593,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["array",{"_index":39,"title":{},"body":{"classes/AddDisc.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{}}}],["array.from(array(6",{"_index":487,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["array.from(array(7",{"_index":486,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["arrow_downward",{"_index":386,"title":{},"body":{"components/GameComponent.html":{}}}],["artifacts",{"_index":753,"title":{},"body":{"index.html":{}}}],["assets/${this.translate.currentlang}.png",{"_index":644,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["auto",{"_index":651,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["automatically",{"_index":747,"title":{},"body":{"index.html":{}}}],["available",{"_index":282,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"index.html":{},"modules.html":{}}}],["background",{"_index":229,"title":{},"body":{"components/DiscComponent.html":{},"components/GameComponent.html":{}}}],["bar",{"_index":324,"title":{},"body":{"components/GameComponent.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["between",{"_index":574,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["black",{"_index":228,"title":{},"body":{"components/DiscComponent.html":{},"components/GameComponent.html":{}}}],["block",{"_index":225,"title":{},"body":{"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{}}}],["board",{"_index":37,"title":{},"body":{"classes/AddDisc.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{}}}],["board.length",{"_index":439,"title":{},"body":{"injectables/GameService.html":{}}}],["board[0].length",{"_index":441,"title":{},"body":{"injectables/GameService.html":{}}}],["board__column",{"_index":395,"title":{},"body":{"components/GameComponent.html":{}}}],["board__column:hover",{"_index":397,"title":{},"body":{"components/GameComponent.html":{}}}],["board__dot",{"_index":217,"title":{},"body":{"components/DiscComponent.html":{}}}],["body",{"_index":200,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{}}}],["body.classlist.add(payload",{"_index":204,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{}}}],["body.classlist.remove(payload",{"_index":202,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{}}}],["boolean",{"_index":175,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"classes/SetDarkMode.html":{},"components/ToolbarComponent.html":{}}}],["bootstrap",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":221,"title":{},"body":{"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["box",{"_index":266,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["browse",{"_index":766,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":751,"title":{},"body":{"index.html":{}}}],["button",{"_index":533,"title":{},"body":{"components/HomeComponent.html":{}}}],["calc(100",{"_index":389,"title":{},"body":{"components/GameComponent.html":{},"components/HomeComponent.html":{}}}],["catch",{"_index":373,"title":{},"body":{"components/GameComponent.html":{}}}],["cell__box",{"_index":399,"title":{},"body":{"components/GameComponent.html":{}}}],["cell__box__disc",{"_index":401,"title":{},"body":{"components/GameComponent.html":{}}}],["center",{"_index":273,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["change",{"_index":749,"title":{},"body":{"index.html":{}}}],["changetheme",{"_index":570,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["channel",{"_index":762,"title":{},"body":{"index.html":{}}}],["check",{"_index":305,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameService.html":{}}}],["checkmaxturn",{"_index":420,"title":{},"body":{"injectables/GameService.html":{}}}],["checkmaxturn(board",{"_index":422,"title":{},"body":{"injectables/GameService.html":{}}}],["checkwin",{"_index":421,"title":{},"body":{"injectables/GameService.html":{}}}],["checkwin(board",{"_index":426,"title":{},"body":{"injectables/GameService.html":{}}}],["choose",{"_index":712,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/AddDisc.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{}},"body":{"classes/AddDisc.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"modules/SharedModule.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddDisc.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_gamemodule",{"_index":404,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_gamemodule_declarations",{"_index":407,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_gamemodule_exports",{"_index":405,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_gamemodule_imports",{"_index":406,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":534,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":536,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":535,"title":{},"body":{"modules/HomeModule.html":{}}}],["cluster_sharedmodule",{"_index":594,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":595,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":596,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":640,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["col[toprowindex",{"_index":367,"title":{},"body":{"components/GameComponent.html":{}}}],["colindex",{"_index":306,"title":{},"body":{"components/GameComponent.html":{}}}],["color",{"_index":45,"title":{},"body":{"classes/AddDisc.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"index.html":{}}}],["colored",{"_index":716,"title":{},"body":{"index.html":{}}}],["column",{"_index":270,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"index.html":{}}}],["commonmodule",{"_index":410,"title":{},"body":{"modules/GameModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["compodoc/compodoc",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":54,"title":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["components",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{},"overview.html":{}}}],["components/toolbar/toolbar.component",{"_index":610,"title":{},"body":{"modules/SharedModule.html":{}}}],["connect",{"_index":708,"title":{},"body":{"index.html":{}}}],["connection",{"_index":709,"title":{},"body":{"index.html":{}}}],["const",{"_index":199,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"classes/AddDisc.html":{},"components/AppComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["constructor(data",{"_index":242,"title":{},"body":{"components/EndGameDialogComponent.html":{}}}],["constructor(gameservice",{"_index":290,"title":{},"body":{"components/GameComponent.html":{}}}],["constructor(payload",{"_index":15,"title":{},"body":{"classes/AddDisc.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{}}}],["constructor(private",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["constructor(public",{"_index":38,"title":{},"body":{"classes/AddDisc.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{}}}],["constructor(router",{"_index":513,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(store",{"_index":571,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["constructor(translate",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/ToolbarComponent.html":{}}}],["container",{"_index":388,"title":{},"body":{"components/GameComponent.html":{},"components/HomeComponent.html":{}}}],["content",{"_index":385,"title":{},"body":{"components/GameComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["corresponding",{"_index":187,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["coverage",{"_index":654,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["current",{"_index":442,"title":{},"body":{"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/ToolbarComponent.html":{}}}],["currentplayerpiece",{"_index":427,"title":{},"body":{"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["d81f0e",{"_index":490,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["dark",{"_index":179,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"classes/SetDarkMode.html":{},"components/SettingsDialogComponent.html":{}}}],["darkmode",{"_index":193,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/SettingsDialogComponent.html":{}}}],["data",{"_index":239,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{}}}],["declarations",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["decorators",{"_index":173,"title":{},"body":{"injectables/AppState.html":{},"components/EndGameDialogComponent.html":{},"injectables/GameState.html":{}}}],["default",{"_index":25,"title":{},"body":{"classes/AddDisc.html":{},"components/DiscComponent.html":{},"components/GameComponent.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["defaults",{"_index":194,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/AddDisc.html":{},"components/AppComponent.html":{},"injectables/AppState.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"components/HomeComponent.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["dependencies",{"_index":105,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":616,"title":{},"body":{"modules/SharedModule.html":{}}}],["description",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/SettingsDialogComponent.html":{},"modules/SharedModule.html":{},"components/ToolbarComponent.html":{}}}],["dev",{"_index":744,"title":{},"body":{"index.html":{}}}],["development",{"_index":740,"title":{},"body":{"index.html":{}}}],["diagonal",{"_index":431,"title":{},"body":{"injectables/GameService.html":{},"index.html":{}}}],["dialog",{"_index":234,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["dialog'},{'name",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["dialog.component",{"_index":327,"title":{},"body":{"components/GameComponent.html":{},"modules/GameModule.html":{},"modules/SharedModule.html":{},"components/ToolbarComponent.html":{}}}],["dialog.component.html",{"_index":238,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.scss",{"_index":237,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts",{"_index":233,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/SettingsDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:13",{"_index":246,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:14",{"_index":579,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":249,"title":{},"body":{"components/EndGameDialogComponent.html":{}}}],["dialog.component.ts:16",{"_index":580,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:17",{"_index":250,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:23",{"_index":247,"title":{},"body":{"components/EndGameDialogComponent.html":{}}}],["dialog.component.ts:33",{"_index":572,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":576,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["dialog.done",{"_index":590,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["dialog.player_1",{"_index":588,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["dialog.player_2",{"_index":589,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["dialog/end",{"_index":232,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"coverage.html":{}}}],["dialog/settings",{"_index":331,"title":{},"body":{"components/GameComponent.html":{},"components/SettingsDialogComponent.html":{},"modules/SharedModule.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["dialog__options",{"_index":591,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["dialogref",{"_index":240,"title":{},"body":{"components/EndGameDialogComponent.html":{}}}],["dialogs/settings",{"_index":611,"title":{},"body":{"modules/SharedModule.html":{},"components/ToolbarComponent.html":{}}}],["direction",{"_index":269,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["directive",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["directives",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["directory",{"_index":756,"title":{},"body":{"index.html":{}}}],["disc",{"_index":29,"title":{},"body":{"classes/AddDisc.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{}}}],["disc'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["disc.component.html",{"_index":209,"title":{},"body":{"components/DiscComponent.html":{}}}],["disc.component.scss",{"_index":208,"title":{},"body":{"components/DiscComponent.html":{}}}],["disc/disc.component",{"_index":418,"title":{},"body":{"modules/GameModule.html":{}}}],["disccomponent",{"_index":87,"title":{"components/DiscComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["discs",{"_index":460,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/SettingsDialogComponent.html":{}}}],["discscolor",{"_index":287,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/SettingsDialogComponent.html":{}}}],["dispatch",{"_index":523,"title":{},"body":{"components/HomeComponent.html":{}}}],["display",{"_index":207,"title":{},"body":{"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["dist",{"_index":755,"title":{},"body":{"index.html":{}}}],["document.getelementsbytagname('body')[0",{"_index":201,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{}}}],["documentation",{"_index":655,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["done",{"_index":425,"title":{},"body":{"injectables/GameService.html":{}}}],["down",{"_index":727,"title":{},"body":{"index.html":{}}}],["draw",{"_index":302,"title":{},"body":{"components/GameComponent.html":{}}}],["dropping",{"_index":715,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":369,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/SettingsDialogComponent.html":{}}}],["e.target.value",{"_index":585,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["element",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["email",{"_index":758,"title":{},"body":{"index.html":{}}}],["emitted",{"_index":578,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["end",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["endgame",{"_index":288,"title":{},"body":{"components/GameComponent.html":{}}}],["endgame(isdraw",{"_index":297,"title":{},"body":{"components/GameComponent.html":{}}}],["endgamedialogcomponent",{"_index":89,"title":{"components/EndGameDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entered",{"_index":451,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/SettingsDialogComponent.html":{}}}],["enumerations",{"_index":696,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":374,"title":{},"body":{"components/GameComponent.html":{}}}],["error",{"_index":500,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["error('illegal",{"_index":506,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["event",{"_index":577,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["exit_to_app",{"_index":649,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["export",{"_index":34,"title":{},"body":{"classes/AddDisc.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"modules/SharedModule.html":{},"components/ToolbarComponent.html":{}}}],["exports",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/GameModule.html":{},"modules/SharedModule.html":{}}}],["exposing",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fake@fake.com",{"_index":759,"title":{},"body":{"index.html":{}}}],["fall",{"_index":725,"title":{},"body":{"index.html":{}}}],["false",{"_index":195,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/DiscComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["fast",{"_index":738,"title":{},"body":{"index.html":{}}}],["features",{"_index":734,"title":{},"body":{"index.html":{}}}],["ffef0f",{"_index":489,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddDisc.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"modules/SharedModule.html":{},"components/ToolbarComponent.html":{},"coverage.html":{}}}],["filepath",{"_index":634,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["files",{"_index":750,"title":{},"body":{"index.html":{}}}],["fill",{"_index":281,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["filling",{"_index":469,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["filter((e",{"_index":368,"title":{},"body":{"components/GameComponent.html":{}}}],["finished",{"_index":299,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["first",{"_index":732,"title":{},"body":{"index.html":{}}}],["fit",{"_index":384,"title":{},"body":{"components/GameComponent.html":{},"components/ToolbarComponent.html":{}}}],["flag",{"_index":631,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["flex",{"_index":268,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["form",{"_index":733,"title":{},"body":{"index.html":{}}}],["format",{"_index":459,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["four",{"_index":433,"title":{},"body":{"injectables/GameService.html":{},"index.html":{}}}],["full",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["function",{"_index":617,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{}}}],["functions",{"_index":702,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["game",{"_index":27,"title":{},"body":{"classes/AddDisc.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"index.html":{}}}],["game'},{'name",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["game.component",{"_index":412,"title":{},"body":{"modules/GameModule.html":{}}}],["game.component.html",{"_index":286,"title":{},"body":{"components/GameComponent.html":{}}}],["game.component.scss",{"_index":285,"title":{},"body":{"components/GameComponent.html":{}}}],["gamecomponent",{"_index":92,"title":{"components/GameComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gamemode",{"_index":31,"title":{},"body":{"classes/AddDisc.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"miscellaneous/enumerations.html":{}}}],["gamemode.versus_ai",{"_index":314,"title":{},"body":{"components/GameComponent.html":{},"components/HomeComponent.html":{}}}],["gamemode.versus_human",{"_index":488,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{}}}],["gamemodule",{"_index":403,"title":{"modules/GameModule.html":{}},"body":{"modules/GameModule.html":{},"modules.html":{},"overview.html":{}}}],["gameservice",{"_index":291,"title":{"injectables/GameService.html":{}},"body":{"components/GameComponent.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["gamestate",{"_index":134,"title":{"injectables/GameState.html":{}},"body":{"modules/AppModule.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"coverage.html":{}}}],["gamestatemodel",{"_index":454,"title":{"interfaces/GameStateModel.html":{}},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"coverage.html":{}}}],["gamestatus",{"_index":32,"title":{},"body":{"classes/AddDisc.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"miscellaneous/enumerations.html":{}}}],["gamestatus.in_progress",{"_index":317,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["getboard",{"_index":444,"title":{},"body":{"injectables/GameState.html":{}}}],["getboard(state",{"_index":453,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["getcurrentlangimg",{"_index":623,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["getdiscscolor",{"_index":445,"title":{},"body":{"injectables/GameState.html":{}}}],["getdiscscolor(state",{"_index":456,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["getgamemode",{"_index":446,"title":{},"body":{"injectables/GameState.html":{}}}],["getgamemode(state",{"_index":461,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["getstate",{"_index":494,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["getstate().discscolor",{"_index":496,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["getting",{"_index":705,"title":{"index.html":{}},"body":{}}],["gohome",{"_index":241,"title":{},"body":{"components/EndGameDialogComponent.html":{}}}],["graph",{"_index":767,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":723,"title":{},"body":{"index.html":{}}}],["grow",{"_index":394,"title":{},"body":{"components/GameComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["height",{"_index":218,"title":{},"body":{"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["hex",{"_index":458,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["hidden",{"_index":212,"title":{},"body":{"components/DiscComponent.html":{}}}],["home",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EndGameDialogComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/ToolbarComponent.html":{}}}],["home'},{'name",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["home.component",{"_index":556,"title":{},"body":{"modules/HomeModule.html":{}}}],["home.component.html",{"_index":511,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":510,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":94,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["homemodule",{"_index":111,"title":{"modules/HomeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["horizontal",{"_index":429,"title":{},"body":{"injectables/GameService.html":{},"index.html":{}}}],["html",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["http",{"_index":704,"title":{},"body":{"miscellaneous/functions.html":{}}}],["http://localhost:4200",{"_index":745,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":599,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":600,"title":{},"body":{"modules/SharedModule.html":{}}}],["httploaderfactory",{"_index":615,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory(http",{"_index":618,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/functions.html":{}}}],["identifier",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":632,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["img",{"_index":652,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"classes/AddDisc.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"modules/SharedModule.html":{},"components/ToolbarComponent.html":{}}}],["import('./pages/game/game.module').then((m",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GameModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["in_progress",{"_index":701,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["increase",{"_index":361,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AddDisc.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddDisc.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"modules/SharedModule.html":{},"components/ToolbarComponent.html":{}}}],["info__disc",{"_index":402,"title":{},"body":{"components/GameComponent.html":{}}}],["inherit",{"_index":653,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["inject",{"_index":251,"title":{},"body":{"components/EndGameDialogComponent.html":{}}}],["inject(mat_dialog_data",{"_index":248,"title":{},"body":{"components/EndGameDialogComponent.html":{}}}],["injectable",{"_index":165,"title":{"injectables/AppState.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{}},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"coverage.html":{}}}],["injectables",{"_index":166,"title":{},"body":{"injectables/AppState.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"overview.html":{}}}],["inline",{"_index":224,"title":{},"body":{"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{}}}],["input",{"_index":188,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/DiscComponent.html":{},"components/ToolbarComponent.html":{}}}],["inputs",{"_index":210,"title":{},"body":{"components/DiscComponent.html":{},"components/ToolbarComponent.html":{}}}],["interface",{"_index":192,"title":{"interfaces/AppStateModel.html":{},"interfaces/GameStateModel.html":{}},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"coverage.html":{}}}],["interfaces",{"_index":205,"title":{},"body":{"interfaces/AppStateModel.html":{},"interfaces/GameStateModel.html":{},"overview.html":{}}}],["isdarkmodeenable",{"_index":169,"title":{},"body":{"injectables/AppState.html":{}}}],["isdarkmodeenable(state",{"_index":171,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{}}}],["isdraw",{"_index":254,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{}}}],["ismaxturn",{"_index":358,"title":{},"body":{"components/GameComponent.html":{}}}],["iswin",{"_index":353,"title":{},"body":{"components/GameComponent.html":{}}}],["items",{"_index":392,"title":{},"body":{"components/GameComponent.html":{},"components/HomeComponent.html":{}}}],["join",{"_index":760,"title":{},"body":{"index.html":{}}}],["justify",{"_index":393,"title":{},"body":{"components/GameComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["language",{"_index":633,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["legend",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["license",{"_index":763,"title":{},"body":{"index.html":{}}}],["light",{"_index":203,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/SettingsDialogComponent.html":{}}}],["light/dark",{"_index":735,"title":{},"body":{"index.html":{}}}],["line",{"_index":432,"title":{},"body":{"injectables/GameService.html":{},"index.html":{}}}],["list",{"_index":555,"title":{},"body":{"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["literal",{"_index":243,"title":{},"body":{"components/EndGameDialogComponent.html":{},"classes/SetDiscColor.html":{}}}],["loadchildren",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loader",{"_index":607,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["look",{"_index":436,"title":{},"body":{"injectables/GameService.html":{}}}],["lowest",{"_index":729,"title":{},"body":{"index.html":{}}}],["m.gamemodule",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["map((col",{"_index":366,"title":{},"body":{"components/GameComponent.html":{}}}],["margin",{"_index":400,"title":{},"body":{"components/GameComponent.html":{},"components/HomeComponent.html":{}}}],["mat_dialog_data",{"_index":252,"title":{},"body":{"components/EndGameDialogComponent.html":{}}}],["matbuttonmodule",{"_index":416,"title":{},"body":{"modules/GameModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":544,"title":{},"body":{"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["matching",{"_index":53,"title":{},"body":{"classes/AddDisc.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"modules/SharedModule.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["matdialog",{"_index":295,"title":{},"body":{"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/ToolbarComponent.html":{}}}],["matdialogmodule",{"_index":543,"title":{},"body":{"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["matdialogref",{"_index":245,"title":{},"body":{"components/EndGameDialogComponent.html":{}}}],["matgridlistmodule",{"_index":553,"title":{},"body":{"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["maticonmodule",{"_index":413,"title":{},"body":{"modules/GameModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":551,"title":{},"body":{"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["matmenumodule",{"_index":608,"title":{},"body":{"modules/SharedModule.html":{}}}],["matradiomodule",{"_index":546,"title":{},"body":{"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["matslidetogglemodule",{"_index":540,"title":{},"body":{"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["matsnackbar",{"_index":294,"title":{},"body":{"components/GameComponent.html":{}}}],["matsnackbarmodule",{"_index":548,"title":{},"body":{"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["matsteppermodule",{"_index":549,"title":{},"body":{"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["mattoolbarmodule",{"_index":538,"title":{},"body":{"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["max",{"_index":277,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["maxheight",{"_index":382,"title":{},"body":{"components/GameComponent.html":{},"components/ToolbarComponent.html":{}}}],["maxwidth",{"_index":381,"title":{},"body":{"components/GameComponent.html":{},"components/ToolbarComponent.html":{}}}],["media",{"_index":275,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["menu",{"_index":530,"title":{},"body":{"components/HomeComponent.html":{}}}],["menu__start",{"_index":532,"title":{},"body":{"components/HomeComponent.html":{}}}],["metadata",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["methods",{"_index":168,"title":{},"body":{"injectables/AppState.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["min",{"_index":279,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["miscellaneous",{"_index":695,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":764,"title":{},"body":{"index.html":{}}}],["mode",{"_index":43,"title":{},"body":{"classes/AddDisc.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"index.html":{}}}],["models/game.model",{"_index":33,"title":{},"body":{"classes/AddDisc.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{}}}],["module",{"_index":102,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GameModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/GameModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["modules",{"_index":104,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GameModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["move",{"_index":376,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AddDisc.html":{},"components/AppComponent.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{}}}],["navigate",{"_index":519,"title":{},"body":{"components/HomeComponent.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["nb_of_columns",{"_index":438,"title":{},"body":{"injectables/GameService.html":{}}}],["nb_of_row",{"_index":440,"title":{},"body":{"injectables/GameService.html":{}}}],["new",{"_index":505,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["newdisccolor",{"_index":495,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["newdisccolor[payload.player",{"_index":497,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["next",{"_index":48,"title":{},"body":{"classes/AddDisc.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{}}}],["nextturn",{"_index":47,"title":{"classes/NextTurn.html":{}},"body":{"classes/AddDisc.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"coverage.html":{}}}],["nextturn()).subscribe",{"_index":362,"title":{},"body":{"components/GameComponent.html":{}}}],["nextturn(undefined",{"_index":463,"title":{},"body":{"injectables/GameState.html":{}}}],["ng",{"_index":707,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/GameModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["ngx",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/SharedModule.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{}}}],["ngxs/devtools",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxs/logger",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngxs/store",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"dependencies.html":{}}}],["ngxsloggerpluginmodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsloggerpluginmodule.forroot",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsmodule.forroot([appstate",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsreduxdevtoolspluginmodule",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxsreduxdevtoolspluginmodule.forroot",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["number",{"_index":16,"title":{},"body":{"classes/AddDisc.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{}}}],["objective",{"_index":731,"title":{},"body":{"index.html":{}}}],["observable",{"_index":309,"title":{},"body":{"components/GameComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["occupying",{"_index":728,"title":{},"body":{"index.html":{}}}],["ok",{"_index":377,"title":{},"body":{"components/GameComponent.html":{}}}],["one",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["one's",{"_index":434,"title":{},"body":{"injectables/GameService.html":{},"index.html":{}}}],["open",{"_index":300,"title":{},"body":{"components/GameComponent.html":{},"components/ToolbarComponent.html":{}}}],["opensettingsdialog",{"_index":624,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["opponent",{"_index":736,"title":{},"body":{"index.html":{}}}],["optional",{"_index":22,"title":{},"body":{"classes/AddDisc.html":{},"components/AppComponent.html":{},"injectables/AppState.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"components/HomeComponent.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["over",{"_index":262,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{}}}],["overview",{"_index":768,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":676,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":264,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["page",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/EndGameDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["pages/game/game.component",{"_index":154,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/home/home.component",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pages/home/home.module",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["palette",{"_index":648,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["param",{"_index":348,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["parameter",{"_index":452,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["parameters",{"_index":19,"title":{},"body":{"classes/AddDisc.html":{},"components/AppComponent.html":{},"injectables/AppState.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"components/HomeComponent.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{}}}],["patchstate",{"_index":198,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["path",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["payload",{"_index":10,"title":{},"body":{"classes/AddDisc.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{}}}],["payload.color",{"_index":498,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["performance",{"_index":739,"title":{},"body":{"index.html":{}}}],["pieces",{"_index":724,"title":{},"body":{"index.html":{}}}],["play",{"_index":289,"title":{},"body":{"components/GameComponent.html":{}}}],["play(colindex",{"_index":303,"title":{},"body":{"components/GameComponent.html":{}}}],["player",{"_index":46,"title":{},"body":{"classes/AddDisc.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"index.html":{}}}],["players",{"_index":711,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["possiblemoves",{"_index":365,"title":{},"body":{"components/GameComponent.html":{}}}],["possiblemoves.length",{"_index":372,"title":{},"body":{"components/GameComponent.html":{}}}],["possiblemoves[math.floor(math.random",{"_index":371,"title":{},"body":{"components/GameComponent.html":{}}}],["private",{"_index":255,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/ToolbarComponent.html":{}}}],["progress",{"_index":484,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["project",{"_index":752,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/AddDisc.html":{},"interfaces/AppStateModel.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{},"properties.html":{}}}],["provide",{"_index":613,"title":{},"body":{"modules/SharedModule.html":{}}}],["providedin",{"_index":437,"title":{},"body":{"injectables/GameService.html":{}}}],["providers",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":9,"title":{},"body":{"classes/AddDisc.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/ToolbarComponent.html":{}}}],["quit",{"_index":625,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["quitbutton",{"_index":627,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["rack",{"_index":710,"title":{},"body":{"index.html":{}}}],["radius",{"_index":222,"title":{},"body":{"components/DiscComponent.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"classes/AddDisc.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{}}}],["redirectto",{"_index":161,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reload",{"_index":748,"title":{},"body":{"index.html":{}}}],["representing",{"_index":176,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["reset",{"_index":41,"title":{},"body":{"classes/AddDisc.html":{},"modules/AppModule.html":{},"modules/GameModule.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"modules/HomeModule.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["resetboard",{"_index":40,"title":{"classes/ResetBoard.html":{}},"body":{"classes/AddDisc.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"coverage.html":{}}}],["resetboard(undefined",{"_index":466,"title":{},"body":{"injectables/GameState.html":{}}}],["resetting",{"_index":518,"title":{},"body":{"components/HomeComponent.html":{}}}],["responsive",{"_index":737,"title":{},"body":{"index.html":{}}}],["result",{"_index":236,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{}}}],["results",{"_index":52,"title":{},"body":{"classes/AddDisc.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"modules/SharedModule.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":196,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"modules/SharedModule.html":{},"components/ToolbarComponent.html":{}}}],["returns",{"_index":181,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":396,"title":{},"body":{"components/GameComponent.html":{}}}],["root",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameService.html":{}}}],["root'},{'name",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["router",{"_index":244,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/HomeComponent.html":{},"components/ToolbarComponent.html":{}}}],["routermodule",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.module",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":720,"title":{},"body":{"index.html":{}}}],["rowindex",{"_index":503,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["run",{"_index":742,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":325,"title":{},"body":{"components/GameComponent.html":{},"components/SettingsDialogComponent.html":{},"dependencies.html":{}}}],["screen",{"_index":276,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["seagreen",{"_index":398,"title":{},"body":{"components/GameComponent.html":{}}}],["selected",{"_index":307,"title":{},"body":{"components/GameComponent.html":{},"components/ToolbarComponent.html":{}}}],["selector",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["serve",{"_index":743,"title":{},"body":{"index.html":{}}}],["server",{"_index":741,"title":{},"body":{"index.html":{}}}],["set",{"_index":36,"title":{},"body":{"classes/AddDisc.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["setboard",{"_index":35,"title":{"classes/SetBoard.html":{}},"body":{"classes/AddDisc.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"coverage.html":{}}}],["setboard(undefined",{"_index":470,"title":{},"body":{"injectables/GameState.html":{}}}],["setdarkmode",{"_index":170,"title":{"classes/SetDarkMode.html":{}},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"classes/SetDarkMode.html":{},"components/SettingsDialogComponent.html":{},"coverage.html":{}}}],["setdarkmode(!this.darkmode",{"_index":584,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["setdarkmode(undefined",{"_index":182,"title":{},"body":{"injectables/AppState.html":{}}}],["setdisccolor",{"_index":44,"title":{"classes/SetDiscColor.html":{}},"body":{"classes/AddDisc.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"coverage.html":{}}}],["setdisccolor(player",{"_index":575,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["setdisccolor(undefined",{"_index":473,"title":{},"body":{"injectables/GameState.html":{}}}],["setgamemode",{"_index":42,"title":{"classes/SetGameMode.html":{}},"body":{"classes/AddDisc.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"coverage.html":{}}}],["setgamemode(undefined",{"_index":476,"title":{},"body":{"injectables/GameState.html":{}}}],["setgamemode(versusai",{"_index":524,"title":{},"body":{"components/HomeComponent.html":{}}}],["setlanguage",{"_index":626,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["setlanguage(language",{"_index":638,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["setstatus",{"_index":447,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["setstatus(undefined",{"_index":481,"title":{},"body":{"injectables/GameState.html":{}}}],["setstaus",{"_index":50,"title":{"classes/SetStaus.html":{}},"body":{"classes/AddDisc.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"coverage.html":{}}}],["setstaus(gamestatus.finished",{"_index":378,"title":{},"body":{"components/GameComponent.html":{}}}],["settings",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["settingsdialogcomponent",{"_index":96,"title":{"components/SettingsDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"modules/SharedModule.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seven",{"_index":718,"title":{},"body":{"index.html":{}}}],["shared",{"_index":598,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/states/app.state",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/states/game.state",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":408,"title":{"modules/SharedModule.html":{}},"body":{"modules/GameModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":235,"title":{},"body":{"components/EndGameDialogComponent.html":{}}}],["six",{"_index":719,"title":{},"body":{"index.html":{}}}],["sizing",{"_index":267,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["slack",{"_index":761,"title":{},"body":{"index.html":{}}}],["solid",{"_index":227,"title":{},"body":{"components/DiscComponent.html":{},"components/GameComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddDisc.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"modules/SharedModule.html":{},"components/ToolbarComponent.html":{},"index.html":{}}}],["space",{"_index":592,"title":{},"body":{"components/SettingsDialogComponent.html":{},"index.html":{}}}],["spacer",{"_index":650,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/.../game.model.ts",{"_index":697,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../shared.module.ts",{"_index":703,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/pages/game/disc/disc.component.ts",{"_index":206,"title":{},"body":{"components/DiscComponent.html":{},"coverage.html":{}}}],["src/app/pages/game/disc/disc.component.ts:14",{"_index":215,"title":{},"body":{"components/DiscComponent.html":{}}}],["src/app/pages/game/disc/disc.component.ts:16",{"_index":213,"title":{},"body":{"components/DiscComponent.html":{}}}],["src/app/pages/game/disc/disc.component.ts:18",{"_index":216,"title":{},"body":{"components/DiscComponent.html":{}}}],["src/app/pages/game/end",{"_index":231,"title":{},"body":{"components/EndGameDialogComponent.html":{},"coverage.html":{}}}],["src/app/pages/game/game.component.ts",{"_index":284,"title":{},"body":{"components/GameComponent.html":{},"coverage.html":{}}}],["src/app/pages/game/game.component.ts:124",{"_index":298,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:23",{"_index":318,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:25",{"_index":308,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:27",{"_index":310,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:29",{"_index":321,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:31",{"_index":322,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:33",{"_index":316,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:35",{"_index":315,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:37",{"_index":313,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:39",{"_index":312,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:41",{"_index":319,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:43",{"_index":296,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:49",{"_index":311,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.component.ts:78",{"_index":304,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/pages/game/game.module.ts",{"_index":409,"title":{},"body":{"modules/GameModule.html":{}}}],["src/app/pages/home/home.component.ts",{"_index":509,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.component.ts:14",{"_index":514,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:17",{"_index":521,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:26",{"_index":516,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":537,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/services/game.service",{"_index":328,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/services/game.service.ts",{"_index":419,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["src/app/services/game.service.ts:14",{"_index":428,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/services/game.service.ts:87",{"_index":423,"title":{},"body":{"injectables/GameService.html":{}}}],["src/app/shared/actions/app.actions.ts",{"_index":561,"title":{},"body":{"classes/SetDarkMode.html":{},"coverage.html":{}}}],["src/app/shared/actions/app.actions.ts:2",{"_index":562,"title":{},"body":{"classes/SetDarkMode.html":{}}}],["src/app/shared/actions/app.actions.ts:4",{"_index":563,"title":{},"body":{"classes/SetDarkMode.html":{}}}],["src/app/shared/actions/game.actions",{"_index":326,"title":{},"body":{"components/GameComponent.html":{},"components/HomeComponent.html":{}}}],["src/app/shared/actions/game.actions.ts",{"_index":6,"title":{},"body":{"classes/AddDisc.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"coverage.html":{}}}],["src/app/shared/actions/game.actions.ts:10",{"_index":558,"title":{},"body":{"classes/ResetBoard.html":{}}}],["src/app/shared/actions/game.actions.ts:14",{"_index":566,"title":{},"body":{"classes/SetGameMode.html":{}}}],["src/app/shared/actions/game.actions.ts:16",{"_index":567,"title":{},"body":{"classes/SetGameMode.html":{}}}],["src/app/shared/actions/game.actions.ts:20",{"_index":564,"title":{},"body":{"classes/SetDiscColor.html":{}}}],["src/app/shared/actions/game.actions.ts:22",{"_index":565,"title":{},"body":{"classes/SetDiscColor.html":{}}}],["src/app/shared/actions/game.actions.ts:26",{"_index":18,"title":{},"body":{"classes/AddDisc.html":{}}}],["src/app/shared/actions/game.actions.ts:28",{"_index":23,"title":{},"body":{"classes/AddDisc.html":{}}}],["src/app/shared/actions/game.actions.ts:32",{"_index":557,"title":{},"body":{"classes/NextTurn.html":{}}}],["src/app/shared/actions/game.actions.ts:36",{"_index":568,"title":{},"body":{"classes/SetStaus.html":{}}}],["src/app/shared/actions/game.actions.ts:38",{"_index":569,"title":{},"body":{"classes/SetStaus.html":{}}}],["src/app/shared/actions/game.actions.ts:4",{"_index":559,"title":{},"body":{"classes/SetBoard.html":{}}}],["src/app/shared/actions/game.actions.ts:6",{"_index":560,"title":{},"body":{"classes/SetBoard.html":{}}}],["src/app/shared/components/toolbar/toolbar.component.ts",{"_index":620,"title":{},"body":{"components/ToolbarComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/toolbar/toolbar.component.ts:12",{"_index":628,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/shared/components/toolbar/toolbar.component.ts:15",{"_index":641,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/shared/components/toolbar/toolbar.component.ts:19",{"_index":629,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/shared/components/toolbar/toolbar.component.ts:24",{"_index":636,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/shared/components/toolbar/toolbar.component.ts:38",{"_index":639,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/shared/components/toolbar/toolbar.component.ts:47",{"_index":630,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/shared/components/toolbar/toolbar.component.ts:54",{"_index":637,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["src/app/shared/dialogs/settings",{"_index":330,"title":{},"body":{"components/GameComponent.html":{},"components/SettingsDialogComponent.html":{},"coverage.html":{}}}],["src/app/shared/models/game.model",{"_index":329,"title":{},"body":{"components/GameComponent.html":{},"components/HomeComponent.html":{}}}],["src/app/shared/models/game.model.ts",{"_index":698,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/modules/shared/shared.module",{"_index":415,"title":{},"body":{"modules/GameModule.html":{},"modules/HomeModule.html":{}}}],["src/app/shared/modules/shared/shared.module.ts",{"_index":597,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/states/app.state.ts",{"_index":167,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"coverage.html":{}}}],["src/app/shared/states/app.state.ts:24",{"_index":174,"title":{},"body":{"injectables/AppState.html":{}}}],["src/app/shared/states/app.state.ts:32",{"_index":186,"title":{},"body":{"injectables/AppState.html":{}}}],["src/app/shared/states/game.state.ts",{"_index":443,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"coverage.html":{}}}],["src/app/shared/states/game.state.ts:107",{"_index":478,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/shared/states/game.state.ts:120",{"_index":483,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/shared/states/game.state.ts:135",{"_index":450,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/shared/states/game.state.ts:161",{"_index":465,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/shared/states/game.state.ts:40",{"_index":455,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/shared/states/game.state.ts:50",{"_index":457,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/shared/states/game.state.ts:60",{"_index":462,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/shared/states/game.state.ts:68",{"_index":472,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/shared/states/game.state.ts:81",{"_index":475,"title":{},"body":{"injectables/GameState.html":{}}}],["src/app/shared/states/game.state.ts:96",{"_index":468,"title":{},"body":{"injectables/GameState.html":{}}}],["start",{"_index":517,"title":{},"body":{"components/HomeComponent.html":{}}}],["started",{"_index":706,"title":{"index.html":{}},"body":{}}],["startgame",{"_index":512,"title":{},"body":{"components/HomeComponent.html":{}}}],["startgame(versusai",{"_index":515,"title":{},"body":{"components/HomeComponent.html":{}}}],["state",{"_index":180,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["state.app.darkmode",{"_index":582,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["state.board",{"_index":491,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["state.board[payload].findindex((e",{"_index":504,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["state.board[payload][rowindex",{"_index":508,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["state.darkmode",{"_index":197,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{}}}],["state.discscolor",{"_index":492,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["state.game.board",{"_index":334,"title":{},"body":{"components/GameComponent.html":{}}}],["state.game.discscolor",{"_index":346,"title":{},"body":{"components/GameComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["state.game.gamemode",{"_index":343,"title":{},"body":{"components/GameComponent.html":{}}}],["state.game.status",{"_index":337,"title":{},"body":{"components/GameComponent.html":{}}}],["state.game.turn",{"_index":340,"title":{},"body":{"components/GameComponent.html":{}}}],["state.gamemode",{"_index":493,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["state.turn",{"_index":507,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["statecontext",{"_index":183,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["statements",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":11,"title":{},"body":{"classes/AddDisc.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{}}}],["status",{"_index":51,"title":{},"body":{"classes/AddDisc.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{}}}],["store",{"_index":292,"title":{},"body":{"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["stored",{"_index":754,"title":{},"body":{"index.html":{}}}],["straight",{"_index":726,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"classes/AddDisc.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/ToolbarComponent.html":{}}}],["styles",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["styleurls",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["subscribe",{"_index":525,"title":{},"body":{"components/HomeComponent.html":{}}}],["support",{"_index":757,"title":{},"body":{"index.html":{},"modules.html":{}}}],["suspended",{"_index":722,"title":{},"body":{"index.html":{}}}],["svg",{"_index":765,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":573,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["table",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":713,"title":{},"body":{"index.html":{}}}],["template",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["templateurl",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["text",{"_index":271,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["th",{"_index":635,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["theme",{"_index":178,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{}}}],["therefore",{"_index":424,"title":{},"body":{"injectables/GameService.html":{}}}],["this._snackbar.open('illegal",{"_index":375,"title":{},"body":{"components/GameComponent.html":{}}}],["this.board",{"_index":332,"title":{},"body":{"components/GameComponent.html":{}}}],["this.board$.subscribe((board",{"_index":335,"title":{},"body":{"components/GameComponent.html":{}}}],["this.board[0].length",{"_index":364,"title":{},"body":{"components/GameComponent.html":{}}}],["this.darkmode",{"_index":581,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.darkmode$.subscribe((darkmode",{"_index":583,"title":{},"body":{"components/SettingsDialogComponent.html":{}}}],["this.dialog.open(endgamedialogcomponent",{"_index":379,"title":{},"body":{"components/GameComponent.html":{}}}],["this.dialog.open(settingsdialogcomponent",{"_index":642,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.dialogref.close",{"_index":257,"title":{},"body":{"components/EndGameDialogComponent.html":{}}}],["this.discscolor",{"_index":345,"title":{},"body":{"components/GameComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["this.discscolor$.subscribe((discscolor",{"_index":347,"title":{},"body":{"components/GameComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["this.discscolor[this.turn",{"_index":380,"title":{},"body":{"components/GameComponent.html":{}}}],["this.endgame",{"_index":357,"title":{},"body":{"components/GameComponent.html":{}}}],["this.endgame(true",{"_index":360,"title":{},"body":{"components/GameComponent.html":{}}}],["this.gamemode",{"_index":342,"title":{},"body":{"components/GameComponent.html":{}}}],["this.gamemode$.subscribe((gamemode",{"_index":344,"title":{},"body":{"components/GameComponent.html":{}}}],["this.gameservice.checkmaxturn(this.board",{"_index":359,"title":{},"body":{"components/GameComponent.html":{}}}],["this.gameservice.checkwin",{"_index":354,"title":{},"body":{"components/GameComponent.html":{}}}],["this.gamestatus",{"_index":336,"title":{},"body":{"components/GameComponent.html":{}}}],["this.gamestatus$.subscribe((status",{"_index":338,"title":{},"body":{"components/GameComponent.html":{}}}],["this.play",{"_index":370,"title":{},"body":{"components/GameComponent.html":{}}}],["this.router.navigate(['/game",{"_index":526,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.router.navigate(['home",{"_index":256,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["this.store",{"_index":522,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.store.dispatch(new",{"_index":350,"title":{},"body":{"components/GameComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["this.store.select((state",{"_index":333,"title":{},"body":{"components/GameComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["this.translate.use(language",{"_index":643,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["this.turn",{"_index":339,"title":{},"body":{"components/GameComponent.html":{}}}],["this.turn$.subscribe((turn",{"_index":341,"title":{},"body":{"components/GameComponent.html":{}}}],["throw",{"_index":501,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["throws",{"_index":499,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{}}}],["toggle",{"_index":542,"title":{},"body":{"modules/HomeModule.html":{},"modules/SharedModule.html":{},"index.html":{}}}],["token",{"_index":435,"title":{},"body":{"injectables/GameService.html":{}}}],["tokens",{"_index":717,"title":{},"body":{"index.html":{}}}],["toolbar",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["toolbar.component.html",{"_index":622,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbar.component.scss",{"_index":621,"title":{},"body":{"components/ToolbarComponent.html":{}}}],["toolbarcomponent",{"_index":98,"title":{"components/ToolbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"modules/SharedModule.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":391,"title":{},"body":{"components/GameComponent.html":{}}}],["toprowindex",{"_index":363,"title":{},"body":{"components/GameComponent.html":{}}}],["translate",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["translate.setdefaultlang('en",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.use('en",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/SharedModule.html":{},"components/ToolbarComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":606,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":605,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/functions.html":{}}}],["translatehttploader(http",{"_index":619,"title":{},"body":{"modules/SharedModule.html":{}}}],["translateloader",{"_index":602,"title":{},"body":{"modules/SharedModule.html":{}}}],["translatemodule",{"_index":603,"title":{},"body":{"modules/SharedModule.html":{}}}],["translatemodule.forroot",{"_index":612,"title":{},"body":{"modules/SharedModule.html":{}}}],["translatepipe",{"_index":604,"title":{},"body":{"modules/SharedModule.html":{}}}],["translateservice",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/ToolbarComponent.html":{}}}],["transparent",{"_index":230,"title":{},"body":{"components/DiscComponent.html":{}}}],["tree",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["try",{"_index":349,"title":{},"body":{"components/GameComponent.html":{}}}],["tslib",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":49,"title":{},"body":{"classes/AddDisc.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{}}}],["turns",{"_index":714,"title":{},"body":{"index.html":{}}}],["two",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["type",{"_index":13,"title":{},"body":{"classes/AddDisc.html":{},"components/AppComponent.html":{},"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["undefined",{"_index":184,"title":{},"body":{"injectables/AppState.html":{},"injectables/GameState.html":{}}}],["usefactory",{"_index":614,"title":{},"body":{"modules/SharedModule.html":{}}}],["value",{"_index":26,"title":{},"body":{"classes/AddDisc.html":{},"components/DiscComponent.html":{},"components/GameComponent.html":{},"classes/NextTurn.html":{},"classes/ResetBoard.html":{},"classes/SetBoard.html":{},"classes/SetDarkMode.html":{},"classes/SetDiscColor.html":{},"classes/SetGameMode.html":{},"classes/SetStaus.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["var",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["version",{"_index":773,"title":{},"body":{"properties.html":{}}}],["versus",{"_index":479,"title":{},"body":{"injectables/GameState.html":{},"interfaces/GameStateModel.html":{},"components/HomeComponent.html":{}}}],["versus_ai",{"_index":700,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["versus_human",{"_index":699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["versusai",{"_index":520,"title":{},"body":{"components/HomeComponent.html":{}}}],["vertical",{"_index":430,"title":{},"body":{"injectables/GameService.html":{},"index.html":{}}}],["vertically",{"_index":721,"title":{},"body":{"index.html":{}}}],["void",{"_index":189,"title":{},"body":{"injectables/AppState.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"injectables/GameState.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["webkit",{"_index":280,"title":{},"body":{"components/EndGameDialogComponent.html":{},"components/SettingsDialogComponent.html":{}}}],["whether",{"_index":177,"title":{},"body":{"injectables/AppState.html":{},"interfaces/AppStateModel.html":{},"components/GameComponent.html":{},"injectables/GameService.html":{},"components/HomeComponent.html":{}}}],["white",{"_index":214,"title":{},"body":{"components/DiscComponent.html":{}}}],["width",{"_index":220,"title":{},"body":{"components/DiscComponent.html":{},"components/EndGameDialogComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/SettingsDialogComponent.html":{},"components/ToolbarComponent.html":{}}}],["win",{"_index":352,"title":{},"body":{"components/GameComponent.html":{},"injectables/GameService.html":{}}}],["within",{"_index":730,"title":{},"body":{"index.html":{}}}],["yes",{"_index":301,"title":{},"body":{"components/GameComponent.html":{}}}],["zone.js",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddDisc.html":{"url":"classes/AddDisc.html","title":"class - AddDisc","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddDisc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/game.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/game.actions.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/actions/game.actions.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[GAME] Add Disc'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/actions/game.actions.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GameMode, GameStatus } from '../models/game.model';\n\nexport class SetBoard {\n  static readonly type = '[GAME] Set Board';\n\n  constructor(public payload: Array>) {}\n}\n\nexport class ResetBoard {\n  static readonly type = '[GAME] Reset Board';\n}\n\nexport class SetGameMode {\n  static readonly type = '[GAME] Set Game Mode';\n\n  constructor(public payload: GameMode) {}\n}\n\nexport class SetDiscColor {\n  static readonly type = '[GAME] Set Disc Color';\n\n  constructor(public payload: { player: number; color: string }) {}\n}\n\nexport class AddDisc {\n  static readonly type = '[GAME] Add Disc';\n\n  constructor(public payload: number) {}\n}\n\nexport class NextTurn {\n  static readonly type = '[GAME] Next Turn';\n}\n\nexport class SetStaus {\n  static readonly type = '[GAME] Set Status';\n\n  constructor(public payload: GameStatus) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  constructor(private translate: TranslateService) {\n    translate.setDefaultLang('en');\n    translate.use('en');\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DiscComponent', 'selector': 'app-disc'},{'name': 'EndGameDialogComponent', 'selector': 'app-end-game-dialog'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            HomeModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxsModule } from '@ngxs/store';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HomeModule } from './pages/home/home.module';\n\nimport { AppComponent } from './app.component';\n\nimport { GameState } from './shared/states/game.state';\nimport { AppState } from './shared/states/app.state';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    NgxsModule.forRoot([AppState, GameState]),\n    NgxsLoggerPluginModule.forRoot(),\n    NgxsReduxDevtoolsPluginModule.forRoot(),\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HomeModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            App Routing module\nExposing just two routes, one for Home page, the other one for Game page\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GameComponent } from './pages/game/game.component';\nimport { HomeComponent } from './pages/home/home.component';\n\n/**\n * App Routing module\n *\n * Exposing just two routes, one for Home page, the other one for Game page\n */\n@NgModule({\n  imports: [\n    RouterModule.forRoot([\n      { path: 'home', component: HomeComponent },\n      {\n        path: 'game',\n        component: GameComponent,\n        loadChildren: () =>\n          import('./pages/game/game.module').then((m) => m.GameModule),\n      },\n      { path: '', redirectTo: '/home', pathMatch: 'full' },\n    ]),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppState.html":{"url":"injectables/AppState.html","title":"injectable - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/states/app.state.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                isDarkModeEnable\n                            \n                            \n                                setDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isDarkModeEnable\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDarkModeEnable(state: AppStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/states/app.state.ts:24\n                \n            \n\n\n            \n                \n                    Get a boolean representing whether the theme is dark or not\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                AppStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Whether the theme is dark or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDarkMode\n                        \n                    \n                \n            \n            \n                \nsetDarkMode(undefined: StateContext, undefined: SetDarkMode)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetDarkMode)\n                \n            \n\n            \n                \n                    Defined in src/app/shared/states/app.state.ts:32\n                \n            \n\n\n            \n                \n                    Set dark mode with the corresponding input\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetDarkMode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { State, Action, StateContext, Selector } from '@ngxs/store';\n\nimport { SetDarkMode } from '../actions/app.actions';\n\nexport interface AppStateModel {\n  darkMode: boolean;\n}\n\n@State({\n  name: 'app',\n  defaults: {\n    darkMode: false,\n  },\n})\n@Injectable()\nexport class AppState {\n  /**\n   * Get a boolean representing whether the theme is dark or not\n   *\n   * @returns {boolean} Whether the theme is dark or not\n   */\n  @Selector()\n  static isDarkModeEnable(state: AppStateModel) {\n    return state.darkMode;\n  }\n\n  /**\n   * Set dark mode with the corresponding input\n   */\n  @Action(SetDarkMode)\n  setDarkMode(\n    { patchState }: StateContext,\n    { payload }: SetDarkMode\n  ) {\n    const body = document.getElementsByTagName('body')[0];\n    body.classList.remove(payload ? 'light-mode' : 'dark-mode');\n    body.classList.add(payload ? 'dark-mode' : 'light-mode');\n    patchState({\n      darkMode: payload,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppStateModel.html":{"url":"interfaces/AppStateModel.html","title":"interface - AppStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/states/app.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            darkMode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        darkMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { State, Action, StateContext, Selector } from '@ngxs/store';\n\nimport { SetDarkMode } from '../actions/app.actions';\n\nexport interface AppStateModel {\n  darkMode: boolean;\n}\n\n@State({\n  name: 'app',\n  defaults: {\n    darkMode: false,\n  },\n})\n@Injectable()\nexport class AppState {\n  /**\n   * Get a boolean representing whether the theme is dark or not\n   *\n   * @returns {boolean} Whether the theme is dark or not\n   */\n  @Selector()\n  static isDarkModeEnable(state: AppStateModel) {\n    return state.darkMode;\n  }\n\n  /**\n   * Set dark mode with the corresponding input\n   */\n  @Action(SetDarkMode)\n  setDarkMode(\n    { patchState }: StateContext,\n    { payload }: SetDarkMode\n  ) {\n    const body = document.getElementsByTagName('body')[0];\n    body.classList.remove(payload ? 'light-mode' : 'dark-mode');\n    body.classList.add(payload ? 'dark-mode' : 'light-mode');\n    patchState({\n      darkMode: payload,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DiscComponent.html":{"url":"components/DiscComponent.html","title":"component - DiscComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DiscComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/game/disc/disc.component.ts\n\n\n\n    \n        Description\n    \n    \n        The disc component\nDisplay a disc\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-disc\n            \n\n            \n                styleUrls\n                ./disc.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./disc.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animate\n                            \n                            \n                                color\n                            \n                            \n                                hidden\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animate\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/game/disc/disc.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'white'\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/game/disc/disc.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/game/disc/disc.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n/**\n * The disc component\n *\n * Display a disc\n */\n@Component({\n  selector: 'app-disc',\n  templateUrl: './disc.component.html',\n  styleUrls: ['./disc.component.scss'],\n})\nexport class DiscComponent {\n  @Input() color = 'white';\n\n  @Input() animate = false;\n\n  @Input() hidden = false;\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./disc.component.scss\n                \n                .board__dot {\n    height: 100%;\n    width: 100%;\n    border-radius: 50%;\n    display: inline-block;\n    border: 1px solid black;\n  }\n\n\n.board__dot--is-hidden {\n    background-color: transparent;\n    border-color: transparent;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DiscComponent', 'selector': 'app-disc'},{'name': 'EndGameDialogComponent', 'selector': 'app-end-game-dialog'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DiscComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EndGameDialogComponent.html":{"url":"components/EndGameDialogComponent.html","title":"component - EndGameDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EndGameDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/game/end-game-dialog/end-game-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dialog component to show game result\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-end-game-dialog\n            \n\n            \n                styleUrls\n                ./end-game-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./end-game-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goHome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type, router: Router, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/game/end-game-dialog/end-game-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goHome\n                        \n                    \n                \n            \n            \n                \ngoHome()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/game/end-game-dialog/end-game-dialog.component.ts:23\n                \n            \n\n\n            \n                \n                    Return to home page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/end-game-dialog/end-game-dialog.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/end-game-dialog/end-game-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n/**\n * Dialog component to show game result\n */\n@Component({\n  selector: 'app-end-game-dialog',\n  templateUrl: './end-game-dialog.component.html',\n  styleUrls: ['./end-game-dialog.component.scss'],\n})\nexport class EndGameDialogComponent {\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: { isDraw: boolean; color: string },\n    private router: Router,\n    public dialogRef: MatDialogRef\n  ) {}\n\n  /**\n   * Return to home page\n   */\n  goHome() {\n    this.router.navigate(['home']);\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n    \n        {{'app.game.game_over' | translate}}\n    \n\n    \n        {{'app.game.draw' | translate}} !\n        \n            {{\"app.game.winner_is\" | translate}}\n            \n        \n    \n\n    \n        {{'app.game.home' | translate}}\n    \n\n    \n\n    \n                \n                    ./end-game-dialog.component.scss\n                \n                .game-over-dialog {\n    height: 300px;\n    width: 300px;\n    padding: 15px;\n    box-sizing: border-box;\n    display: flex; \n    flex-direction: column; \n    text-align: center;\n}\n\n\n.disc {\n    width: 30px;\n    height: 30px;\n    display: inline-block;\n}\n\n\n@media only screen and (max-width: 600px) {\n    .game-over-dialog {\n        min-height: -webkit-fill-available;\n        width: 100vw;\n    }\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{\\'app.game.game_over\\' | translate}}                {{\\'app.game.draw\\' | translate}} !                    {{\"app.game.winner_is\" | translate}}                                    {{\\'app.game.home\\' | translate}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DiscComponent', 'selector': 'app-disc'},{'name': 'EndGameDialogComponent', 'selector': 'app-end-game-dialog'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EndGameDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameComponent.html":{"url":"components/GameComponent.html","title":"component - GameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/game/game.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game\n            \n\n            \n                styleUrls\n                ./game.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./game.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                board\n                            \n                            \n                                board$\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                discsColor\n                            \n                            \n                                discsColor$\n                            \n                            \n                                gameMode\n                            \n                            \n                                gameMode$\n                            \n                            \n                                gameStatus\n                            \n                            \n                                GameStatus\n                            \n                            \n                                gameStatus$\n                            \n                            \n                                turn\n                            \n                            \n                                turn$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endGame\n                            \n                            \n                                play\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(gameService: GameService, store: Store, _snackBar: MatSnackBar, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/game/game.component.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        endGame\n                        \n                    \n                \n            \n            \n                \nendGame(isDraw?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/game/game.component.ts:124\n                \n            \n\n\n            \n                \n                    Set the game status to finished and open end game dialog\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isDraw\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Boolean whether the game result is a draw\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        play\n                        \n                    \n                \n            \n            \n                \nplay(colIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/game/game.component.ts:78\n                \n            \n\n\n            \n                \n                    Add a disc and check if the game is over if not the turn is over\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    colIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The selected column index\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        board\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array>\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        board$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discsColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discsColor$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameMode\n\n                    \n                \n                \n                    \n                        Default value : GameMode.VERSUS_AI\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameMode$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameStatus\n\n                    \n                \n                \n                    \n                        Default value : GameStatus.IN_PROGRESS\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GameStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : GameStatus\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameStatus$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        turn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        turn$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/game/game.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngxs/store';\nimport {\n  AddDisc,\n  NextTurn,\n  SetStaus,\n} from 'src/app/shared/actions/game.actions';\n\nimport { EndGameDialogComponent } from './end-game-dialog/end-game-dialog.component';\nimport { GameService } from 'src/app/services/game.service';\nimport { GameMode, GameStatus } from 'src/app/shared/models/game.model';\nimport { SettingsDialogComponent } from 'src/app/shared/dialogs/settings-dialog/settings-dialog.component';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.scss'],\n})\nexport class GameComponent {\n  GameStatus = GameStatus;\n\n  board: Array> = [];\n\n  board$: Observable>>;\n\n  turn = 0;\n\n  turn$: Observable;\n\n  gameMode$: Observable;\n\n  gameMode: GameMode = GameMode.VERSUS_AI;\n\n  discsColor$: Observable>;\n\n  discsColor: string[] = [];\n\n  gameStatus$: Observable;\n\n  gameStatus: GameStatus = GameStatus.IN_PROGRESS;\n\n  constructor(\n    private gameService: GameService,\n    private store: Store,\n    private _snackBar: MatSnackBar,\n    public dialog: MatDialog\n  ) {\n    this.board$ = this.store.select((state) => state.game.board);\n    this.board$.subscribe((board) => {\n      this.board = board;\n    });\n    this.gameStatus$ = this.store.select((state) => state.game.status);\n    this.gameStatus$.subscribe((status) => {\n      this.gameStatus = status;\n    });\n    this.turn$ = this.store.select((state) => state.game.turn);\n    this.turn$.subscribe((turn) => {\n      this.turn = turn;\n    });\n    this.gameMode$ = this.store.select((state) => state.game.gameMode);\n    this.gameMode$.subscribe((gameMode) => {\n      this.gameMode = gameMode;\n    });\n    this.discsColor$ = this.store.select((state) => state.game.discsColor);\n    this.discsColor$.subscribe((discsColor) => {\n      this.discsColor = discsColor;\n    });\n  }\n\n  /**\n   * Add a disc and check if the game is over if not the turn is over\n   *\n   * @param {number} colIndex The selected column index\n   */\n  play(colIndex: number) {\n    // Add disc\n    try {\n      this.store.dispatch(new AddDisc(colIndex)).subscribe(() => {\n        // Check win\n        const isWin = this.gameService.checkWin(\n          this.board,\n          this.turn % 2 === 0 ? 1 : 2\n        );\n\n        if (isWin) {\n          return this.endGame();\n        }\n\n        // Check max turn\n        const isMaxTurn = this.gameService.checkMaxTurn(this.board, this.turn);\n        if (isMaxTurn) {\n          this.endGame(true);\n        }\n\n        // Increase turn\n        this.store.dispatch(new NextTurn()).subscribe(() => {\n          if (this.turn % 2 === 1 && this.gameMode === GameMode.VERSUS_AI) {\n            const topRowIndex = this.board[0].length;\n            const possibleMoves = this.board\n              .map((col, i) => {\n                return col[topRowIndex] === 0 ? -1 : i;\n              })\n              .filter((e) => e >= 0);\n            this.play(\n              possibleMoves[Math.floor(Math.random() * possibleMoves.length)]\n            );\n          }\n        });\n      });\n    } catch (err) {\n      this._snackBar.open('Illegal move', 'OK');\n      return;\n    }\n  }\n\n  /**\n   * Set the game status to finished and open end game dialog\n   *\n   * @param {boolean} isDraw Boolean whether the game result is a draw\n   */\n  endGame(isDraw?: boolean) {\n    this.store.dispatch(new SetStaus(GameStatus.FINISHED));\n    this.dialog.open(EndGameDialogComponent, {\n      data: {\n        isDraw: isDraw,\n        color: this.discsColor[this.turn % 2],\n      },\n      maxWidth: '100vw',\n      maxHeight: '100vh',\n      height: 'fit-content',\n      width: 'fit-content',\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n     \n        \n            \n                \n                    \n                \n                \n                    arrow_downward\n                \n            \n        \n            \n        \n            {{'app.game.player_turn' | translate}} : \n            \n        \n      \n\n\n    \n\n    \n                \n                    ./game.component.scss\n                \n                .game-container {\n    height: 100vh;\n    width: 100%;\n}\n\n.board-container {\n    width: 100%;\n    height: calc(100% - 79px);\n    padding-top: 15px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.board {\n    display: flex;\n    justify-content: center;\n    flex-grow: 1;\n    align-items: center;\n    max-width: 300px;\n    max-height: 300px;\n    height: 100%;\n}\n\n.board__column {\n    display: flex;\n    flex-direction: column-reverse;\n    flex-grow: 1;\n    height: 100%;\n}\n\n.board__column:hover {\n    background-color: seagreen;\n}\n\n.cell__box {\n    display: flex;\n    flex-grow: 1;\n    align-items: center;\n    justify-content: center;\n    border: 1px solid black;\n    margin: 1px;\n}\n\n.cell__box__disc {\n    width: 100%; height: 100%;\n}\n\n.player-turn-info {\n    padding-top: 15px;\n    text-align: center;\n}\n\n.player-turn-info__disc {\n    width: 30px; height: 30px; display: inline-block;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                     arrow_downward                                                                    {{\\'app.game.player_turn\\' | translate}} :                           '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DiscComponent', 'selector': 'app-disc'},{'name': 'EndGameDialogComponent', 'selector': 'app-end-game-dialog'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GameModule.html":{"url":"modules/GameModule.html","title":"module - GameModule","body":"\n                   \n\n\n\n\n    Modules\n    GameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GameModule\n\n\n\ncluster_GameModule_exports\n\n\n\ncluster_GameModule_imports\n\n\n\ncluster_GameModule_declarations\n\n\n\n\nDiscComponent\n\nDiscComponent\n\n\n\nGameModule\n\nGameModule\n\nGameModule -->\n\nDiscComponent->GameModule\n\n\n\n\n\nEndGameDialogComponent\n\nEndGameDialogComponent\n\nGameModule -->\n\nEndGameDialogComponent->GameModule\n\n\n\n\n\nGameComponent\n\nGameComponent\n\nGameModule -->\n\nGameComponent->GameModule\n\n\n\n\n\nEndGameDialogComponent \n\nEndGameDialogComponent \n\nEndGameDialogComponent  -->\n\nGameModule->EndGameDialogComponent \n\n\n\n\n\nGameComponent \n\nGameComponent \n\nGameComponent  -->\n\nGameModule->GameComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nGameModule -->\n\nSharedModule->GameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/game/game.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The game module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DiscComponent\n                        \n                        \n                            EndGameDialogComponent\n                        \n                        \n                            GameComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EndGameDialogComponent\n                        \n                        \n                            GameComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GameComponent } from './game.component';\nimport { EndGameDialogComponent } from './end-game-dialog/end-game-dialog.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SharedModule } from 'src/app/shared/modules/shared/shared.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DiscComponent } from './disc/disc.component';\n\n/**\n * The game module\n */\n@NgModule({\n  declarations: [GameComponent, EndGameDialogComponent, DiscComponent],\n  imports: [CommonModule, SharedModule, MatIconModule, MatButtonModule],\n  exports: [GameComponent, EndGameDialogComponent],\n})\nexport class GameModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/game.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkMaxTurn\n                            \n                            \n                                checkWin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkMaxTurn\n                        \n                    \n                \n            \n            \n                \ncheckMaxTurn(board: Array>, turn: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/game.service.ts:87\n                \n            \n\n\n            \n                \n                    Check if the board is full and therefore no move can be done\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    board\n                                    \n                                            Array>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The board\n\n                                    \n                                \n                                \n                                    turn\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Whether the board is full or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkWin\n                        \n                    \n                \n            \n            \n                \ncheckWin(board: Array>, currentPlayerPiece: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/game.service.ts:14\n                \n            \n\n\n            \n                \n                    Check if there is a horizontal, vertical, or diagonal line of four of one's own token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    board\n                                    \n                                            Array>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The board\n\n                                    \n                                \n                                \n                                    currentPlayerPiece\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The token to look for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Whether there is a line of four or not\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GameService {\n  /**\n   * Check if there is a horizontal, vertical, or diagonal line of four of one's own token\n   *\n   * @param {Array>} board The board\n   * @param {number} currentPlayerPiece The token to look for\n   * @returns {boolean} Whether there is a line of four or not\n   */\n  checkWin(board: Array>, currentPlayerPiece: number): boolean {\n    const NB_OF_COLUMNS = board.length;\n    const NB_OF_ROW = board.length > 0 ? board[0].length : 0;\n\n    // Check Vertical win\n    for (let i = 0; i >} board The board\n   * @param {Array>} board The current turn\n   * @returns {boolean} Whether the board is full or not\n   */\n  checkMaxTurn(board: Array>, turn: number): boolean {\n    const NB_OF_COLUMNS = board.length;\n    const NB_OF_ROW = board.length > 0 ? board[0].length : 0;\n    return turn + 1 >= NB_OF_COLUMNS * NB_OF_ROW;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameState.html":{"url":"injectables/GameState.html","title":"injectable - GameState","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/states/game.state.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDisc\n                            \n                            \n                                    Static\n                                getBoard\n                            \n                            \n                                    Static\n                                getDiscsColor\n                            \n                            \n                                    Static\n                                getGameMode\n                            \n                            \n                                nextTurn\n                            \n                            \n                                resetBoard\n                            \n                            \n                                setBoard\n                            \n                            \n                                setDiscColor\n                            \n                            \n                                setGameMode\n                            \n                            \n                                setStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addDisc\n                        \n                    \n                \n            \n            \n                \naddDisc(undefined: StateContext, undefined: AddDisc)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(AddDisc)\n                \n            \n\n            \n                \n                    Defined in src/app/shared/states/game.state.ts:135\n                \n            \n\n\n            \n                \n                    Add a disc in the entered column parameter\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                AddDisc\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getBoard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBoard(state: GameStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/states/game.state.ts:40\n                \n            \n\n\n            \n                \n                    Get the board\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                GameStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array>\n\n                    \n                    \n                        The board\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getDiscsColor\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDiscsColor(state: GameStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/states/game.state.ts:50\n                \n            \n\n\n            \n                \n                    Get an array of string representing player disc color in hex format\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                GameStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        The array of discs color\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getGameMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    getGameMode(state: GameStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in src/app/shared/states/game.state.ts:60\n                \n            \n\n\n            \n                \n                    Get the current game mode\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                GameStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GameMode\n\n                    \n                    \n                        The current game mode\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextTurn\n                        \n                    \n                \n            \n            \n                \nnextTurn(undefined: StateContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(NextTurn)\n                \n            \n\n            \n                \n                    Defined in src/app/shared/states/game.state.ts:161\n                \n            \n\n\n            \n                \n                    Increase the turn\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetBoard\n                        \n                    \n                \n            \n            \n                \nresetBoard(undefined: StateContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(ResetBoard)\n                \n            \n\n            \n                \n                    Defined in src/app/shared/states/game.state.ts:96\n                \n            \n\n\n            \n                \n                    Reset the board by filling it with \"0\"\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBoard\n                        \n                    \n                \n            \n            \n                \nsetBoard(undefined: StateContext, undefined: SetBoard)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetBoard)\n                \n            \n\n            \n                \n                    Defined in src/app/shared/states/game.state.ts:68\n                \n            \n\n\n            \n                \n                    Set the board with the entered param\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetBoard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDiscColor\n                        \n                    \n                \n            \n            \n                \nsetDiscColor(undefined: StateContext, undefined: SetDiscColor)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetDiscColor)\n                \n            \n\n            \n                \n                    Defined in src/app/shared/states/game.state.ts:81\n                \n            \n\n\n            \n                \n                    Set the disc color with the entered param\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetDiscColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGameMode\n                        \n                    \n                \n            \n            \n                \nsetGameMode(undefined: StateContext, undefined: SetGameMode)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetGameMode)\n                \n            \n\n            \n                \n                    Defined in src/app/shared/states/game.state.ts:107\n                \n            \n\n\n            \n                \n                    Set the game mode (versus player or versus AI)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetGameMode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStatus\n                        \n                    \n                \n            \n            \n                \nsetStatus(undefined: StateContext, undefined: SetStaus)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetStaus)\n                \n            \n\n            \n                \n                    Defined in src/app/shared/states/game.state.ts:120\n                \n            \n\n\n            \n                \n                    Set the status of the game (in progress or finished)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetStaus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { State, Action, StateContext, Selector } from '@ngxs/store';\nimport {\n  SetBoard,\n  ResetBoard,\n  AddDisc,\n  SetGameMode,\n  NextTurn,\n  SetDiscColor,\n  SetStaus,\n} from '../actions/game.actions';\nimport { GameMode, GameStatus } from '../models/game.model';\n\nexport interface GameStateModel {\n  board: Array>;\n  turn: number;\n  gameMode: GameMode;\n  discsColor: Array;\n  status: GameStatus;\n}\n\n@State({\n  name: 'game',\n  defaults: {\n    board: Array.from(Array(7), () => Array.from(Array(6), () => 0)),\n    turn: 0,\n    gameMode: GameMode.VERSUS_HUMAN,\n    discsColor: ['#ffef0f', '#d81f0e'],\n    status: GameStatus.IN_PROGRESS,\n  },\n})\n@Injectable()\nexport class GameState {\n  /**\n   * Get the board\n   *\n   * @returns {Array>} The board\n   */\n  @Selector()\n  static getBoard(state: GameStateModel) {\n    return state.board;\n  }\n\n  /**\n   * Get an array of string representing player disc color in hex format\n   *\n   * @returns {Array} The array of discs color\n   */\n  @Selector()\n  static getDiscsColor(state: GameStateModel) {\n    return state.discsColor;\n  }\n\n  /**\n   * Get the current game mode\n   *\n   * @returns {GameMode} The current game mode\n   */\n  @Selector()\n  static getGameMode(state: GameStateModel) {\n    return state.gameMode;\n  }\n\n  /**\n   * Set the board with the entered param\n   */\n  @Action(SetBoard)\n  setBoard(\n    { patchState }: StateContext,\n    { payload }: SetBoard\n  ) {\n    patchState({\n      board: payload,\n    });\n  }\n\n  /**\n   * Set the disc color with the entered param\n   */\n  @Action(SetDiscColor)\n  setDiscColor(\n    { getState, patchState }: StateContext,\n    { payload }: SetDiscColor\n  ) {\n    const newDiscColor = getState().discsColor;\n    newDiscColor[payload.player] = payload.color;\n    patchState({\n      discsColor: newDiscColor,\n    });\n  }\n\n  /**\n   * Reset the board by filling it with \"0\"\n   */\n  @Action(ResetBoard)\n  resetBoard({ patchState }: StateContext) {\n    patchState({\n      board: Array.from(Array(7), () => Array.from(Array(6), () => 0)),\n      status: GameStatus.IN_PROGRESS,\n    });\n  }\n\n  /**\n   * Set the game mode (versus player or versus AI)\n   */\n  @Action(SetGameMode)\n  setGameMode(\n    { patchState }: StateContext,\n    { payload }: SetGameMode\n  ) {\n    patchState({\n      gameMode: payload,\n    });\n  }\n\n  /**\n   * Set the status of the game (in progress or finished)\n   */\n  @Action(SetStaus)\n  setStatus(\n    { patchState }: StateContext,\n    { payload }: SetStaus\n  ) {\n    patchState({\n      status: payload,\n    });\n  }\n\n  /**\n   * Add a disc in the entered column parameter\n   *\n   * @throws {Error} Will throw an error if the disc cannot be added because the column is full.\n   */\n  @Action(AddDisc)\n  addDisc(\n    { getState, patchState }: StateContext,\n    { payload }: AddDisc\n  ) {\n    const state = getState();\n\n    const rowIndex = state.board[payload].findIndex((e) => e === 0);\n\n    if (rowIndex === -1) {\n      throw new Error('Illegal Move');\n    }\n\n    const currentPlayerPiece = state.turn % 2 === 0 ? 1 : 2;\n\n    state.board[payload][rowIndex] = currentPlayerPiece;\n\n    patchState({\n      board: state.board,\n      turn: state.turn,\n    });\n  }\n\n  /**\n   * Increase the turn\n   */\n  @Action(NextTurn)\n  nextTurn({ getState, patchState }: StateContext) {\n    const state = getState();\n    patchState({\n      turn: state.turn + 1,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameStateModel.html":{"url":"interfaces/GameStateModel.html","title":"interface - GameStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GameStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/states/game.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            board\n                                        \n                                \n                                \n                                        \n                                            discsColor\n                                        \n                                \n                                \n                                        \n                                            gameMode\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            turn\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        board\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        board:     Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discsColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        discsColor:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gameMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gameMode:         GameMode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GameMode\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         GameStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GameStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        turn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        turn:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { State, Action, StateContext, Selector } from '@ngxs/store';\nimport {\n  SetBoard,\n  ResetBoard,\n  AddDisc,\n  SetGameMode,\n  NextTurn,\n  SetDiscColor,\n  SetStaus,\n} from '../actions/game.actions';\nimport { GameMode, GameStatus } from '../models/game.model';\n\nexport interface GameStateModel {\n  board: Array>;\n  turn: number;\n  gameMode: GameMode;\n  discsColor: Array;\n  status: GameStatus;\n}\n\n@State({\n  name: 'game',\n  defaults: {\n    board: Array.from(Array(7), () => Array.from(Array(6), () => 0)),\n    turn: 0,\n    gameMode: GameMode.VERSUS_HUMAN,\n    discsColor: ['#ffef0f', '#d81f0e'],\n    status: GameStatus.IN_PROGRESS,\n  },\n})\n@Injectable()\nexport class GameState {\n  /**\n   * Get the board\n   *\n   * @returns {Array>} The board\n   */\n  @Selector()\n  static getBoard(state: GameStateModel) {\n    return state.board;\n  }\n\n  /**\n   * Get an array of string representing player disc color in hex format\n   *\n   * @returns {Array} The array of discs color\n   */\n  @Selector()\n  static getDiscsColor(state: GameStateModel) {\n    return state.discsColor;\n  }\n\n  /**\n   * Get the current game mode\n   *\n   * @returns {GameMode} The current game mode\n   */\n  @Selector()\n  static getGameMode(state: GameStateModel) {\n    return state.gameMode;\n  }\n\n  /**\n   * Set the board with the entered param\n   */\n  @Action(SetBoard)\n  setBoard(\n    { patchState }: StateContext,\n    { payload }: SetBoard\n  ) {\n    patchState({\n      board: payload,\n    });\n  }\n\n  /**\n   * Set the disc color with the entered param\n   */\n  @Action(SetDiscColor)\n  setDiscColor(\n    { getState, patchState }: StateContext,\n    { payload }: SetDiscColor\n  ) {\n    const newDiscColor = getState().discsColor;\n    newDiscColor[payload.player] = payload.color;\n    patchState({\n      discsColor: newDiscColor,\n    });\n  }\n\n  /**\n   * Reset the board by filling it with \"0\"\n   */\n  @Action(ResetBoard)\n  resetBoard({ patchState }: StateContext) {\n    patchState({\n      board: Array.from(Array(7), () => Array.from(Array(6), () => 0)),\n      status: GameStatus.IN_PROGRESS,\n    });\n  }\n\n  /**\n   * Set the game mode (versus player or versus AI)\n   */\n  @Action(SetGameMode)\n  setGameMode(\n    { patchState }: StateContext,\n    { payload }: SetGameMode\n  ) {\n    patchState({\n      gameMode: payload,\n    });\n  }\n\n  /**\n   * Set the status of the game (in progress or finished)\n   */\n  @Action(SetStaus)\n  setStatus(\n    { patchState }: StateContext,\n    { payload }: SetStaus\n  ) {\n    patchState({\n      status: payload,\n    });\n  }\n\n  /**\n   * Add a disc in the entered column parameter\n   *\n   * @throws {Error} Will throw an error if the disc cannot be added because the column is full.\n   */\n  @Action(AddDisc)\n  addDisc(\n    { getState, patchState }: StateContext,\n    { payload }: AddDisc\n  ) {\n    const state = getState();\n\n    const rowIndex = state.board[payload].findIndex((e) => e === 0);\n\n    if (rowIndex === -1) {\n      throw new Error('Illegal Move');\n    }\n\n    const currentPlayerPiece = state.turn % 2 === 0 ? 1 : 2;\n\n    state.board[payload][rowIndex] = currentPlayerPiece;\n\n    patchState({\n      board: state.board,\n      turn: state.turn,\n    });\n  }\n\n  /**\n   * Increase the turn\n   */\n  @Action(NextTurn)\n  nextTurn({ getState, patchState }: StateContext) {\n    const state = getState();\n    patchState({\n      turn: state.turn + 1,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                startGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, dialog: MatDialog, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        startGame\n                        \n                    \n                \n            \n            \n                \nstartGame(versusAI: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/home.component.ts:26\n                \n            \n\n\n            \n                \n                    Start the game by resetting the board and navigate to the game component\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    versusAI\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the game mode is versus ai or not\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngxs/store';\n\nimport { ResetBoard, SetGameMode } from 'src/app/shared/actions/game.actions';\nimport { GameMode } from 'src/app/shared/models/game.model';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent {\n  constructor(\n    private router: Router,\n    public dialog: MatDialog,\n    private store: Store\n  ) {}\n\n  /**\n   * Start the game by resetting the board and navigate to the game component\n   *\n   * @param {boolean} versusAI Whether the game mode is versus ai or not\n   */\n  startGame(versusAI: boolean) {\n    this.store\n      .dispatch([\n        new ResetBoard(),\n        new SetGameMode(versusAI ? GameMode.VERSUS_AI : GameMode.VERSUS_HUMAN),\n      ])\n      .subscribe(() => {\n        this.router.navigate(['/game']);\n      });\n  }\n}\n\n    \n\n    \n        \n    \n     \n        \n           {{ 'app.home.choose_game_mode' | translate }} \n        \n        \n            {{\"app.home.one_versus_one\" | translate}}\n            {{\"app.home.one_versus_ai\" | translate}}\n        \n      \n\n    \n\n    \n                \n                    ./home.component.scss\n                \n                .home-container {\n    height: 100vh;\n    width: 100%;\n}\n\n.start-menu {\n    width: 100%;\n    height: calc(100% - 64px);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\n.start-menu__start-button {\n    margin: 15px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ \\'app.home.choose_game_mode\\' | translate }}                             {{\"app.home.one_versus_one\" | translate}}            {{\"app.home.one_versus_ai\" | translate}}              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DiscComponent', 'selector': 'app-disc'},{'name': 'EndGameDialogComponent', 'selector': 'app-end-game-dialog'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_HomeModule_declarations\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The home module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { HomeComponent } from './home.component';\nimport { SharedModule } from 'src/app/shared/modules/shared/shared.module';\n\n/**\n * The home module\n */\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    MatGridListModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n    MatCardModule,\n    MatRadioModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatInputModule,\n  ],\n})\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NextTurn.html":{"url":"classes/NextTurn.html","title":"class - NextTurn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NextTurn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/game.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[GAME] Next Turn'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/actions/game.actions.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GameMode, GameStatus } from '../models/game.model';\n\nexport class SetBoard {\n  static readonly type = '[GAME] Set Board';\n\n  constructor(public payload: Array>) {}\n}\n\nexport class ResetBoard {\n  static readonly type = '[GAME] Reset Board';\n}\n\nexport class SetGameMode {\n  static readonly type = '[GAME] Set Game Mode';\n\n  constructor(public payload: GameMode) {}\n}\n\nexport class SetDiscColor {\n  static readonly type = '[GAME] Set Disc Color';\n\n  constructor(public payload: { player: number; color: string }) {}\n}\n\nexport class AddDisc {\n  static readonly type = '[GAME] Add Disc';\n\n  constructor(public payload: number) {}\n}\n\nexport class NextTurn {\n  static readonly type = '[GAME] Next Turn';\n}\n\nexport class SetStaus {\n  static readonly type = '[GAME] Set Status';\n\n  constructor(public payload: GameStatus) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetBoard.html":{"url":"classes/ResetBoard.html","title":"class - ResetBoard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetBoard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/game.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[GAME] Reset Board'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/actions/game.actions.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GameMode, GameStatus } from '../models/game.model';\n\nexport class SetBoard {\n  static readonly type = '[GAME] Set Board';\n\n  constructor(public payload: Array>) {}\n}\n\nexport class ResetBoard {\n  static readonly type = '[GAME] Reset Board';\n}\n\nexport class SetGameMode {\n  static readonly type = '[GAME] Set Game Mode';\n\n  constructor(public payload: GameMode) {}\n}\n\nexport class SetDiscColor {\n  static readonly type = '[GAME] Set Disc Color';\n\n  constructor(public payload: { player: number; color: string }) {}\n}\n\nexport class AddDisc {\n  static readonly type = '[GAME] Add Disc';\n\n  constructor(public payload: number) {}\n}\n\nexport class NextTurn {\n  static readonly type = '[GAME] Next Turn';\n}\n\nexport class SetStaus {\n  static readonly type = '[GAME] Set Status';\n\n  constructor(public payload: GameStatus) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetBoard.html":{"url":"classes/SetBoard.html","title":"class - SetBoard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetBoard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/game.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Array>)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/game.actions.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    Array>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/actions/game.actions.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[GAME] Set Board'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/actions/game.actions.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GameMode, GameStatus } from '../models/game.model';\n\nexport class SetBoard {\n  static readonly type = '[GAME] Set Board';\n\n  constructor(public payload: Array>) {}\n}\n\nexport class ResetBoard {\n  static readonly type = '[GAME] Reset Board';\n}\n\nexport class SetGameMode {\n  static readonly type = '[GAME] Set Game Mode';\n\n  constructor(public payload: GameMode) {}\n}\n\nexport class SetDiscColor {\n  static readonly type = '[GAME] Set Disc Color';\n\n  constructor(public payload: { player: number; color: string }) {}\n}\n\nexport class AddDisc {\n  static readonly type = '[GAME] Add Disc';\n\n  constructor(public payload: number) {}\n}\n\nexport class NextTurn {\n  static readonly type = '[GAME] Next Turn';\n}\n\nexport class SetStaus {\n  static readonly type = '[GAME] Set Status';\n\n  constructor(public payload: GameStatus) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetDarkMode.html":{"url":"classes/SetDarkMode.html","title":"class - SetDarkMode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetDarkMode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/app.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/app.actions.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/actions/app.actions.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[App] Set Dark Mode'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/actions/app.actions.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SetDarkMode {\n  static readonly type = '[App] Set Dark Mode';\n\n  constructor(public payload: boolean) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetDiscColor.html":{"url":"classes/SetDiscColor.html","title":"class - SetDiscColor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetDiscColor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/game.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/game.actions.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/actions/game.actions.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[GAME] Set Disc Color'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/actions/game.actions.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GameMode, GameStatus } from '../models/game.model';\n\nexport class SetBoard {\n  static readonly type = '[GAME] Set Board';\n\n  constructor(public payload: Array>) {}\n}\n\nexport class ResetBoard {\n  static readonly type = '[GAME] Reset Board';\n}\n\nexport class SetGameMode {\n  static readonly type = '[GAME] Set Game Mode';\n\n  constructor(public payload: GameMode) {}\n}\n\nexport class SetDiscColor {\n  static readonly type = '[GAME] Set Disc Color';\n\n  constructor(public payload: { player: number; color: string }) {}\n}\n\nexport class AddDisc {\n  static readonly type = '[GAME] Add Disc';\n\n  constructor(public payload: number) {}\n}\n\nexport class NextTurn {\n  static readonly type = '[GAME] Next Turn';\n}\n\nexport class SetStaus {\n  static readonly type = '[GAME] Set Status';\n\n  constructor(public payload: GameStatus) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetGameMode.html":{"url":"classes/SetGameMode.html","title":"class - SetGameMode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetGameMode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/game.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: GameMode)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/game.actions.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        GameMode\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameMode\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/actions/game.actions.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[GAME] Set Game Mode'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/actions/game.actions.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GameMode, GameStatus } from '../models/game.model';\n\nexport class SetBoard {\n  static readonly type = '[GAME] Set Board';\n\n  constructor(public payload: Array>) {}\n}\n\nexport class ResetBoard {\n  static readonly type = '[GAME] Reset Board';\n}\n\nexport class SetGameMode {\n  static readonly type = '[GAME] Set Game Mode';\n\n  constructor(public payload: GameMode) {}\n}\n\nexport class SetDiscColor {\n  static readonly type = '[GAME] Set Disc Color';\n\n  constructor(public payload: { player: number; color: string }) {}\n}\n\nexport class AddDisc {\n  static readonly type = '[GAME] Add Disc';\n\n  constructor(public payload: number) {}\n}\n\nexport class NextTurn {\n  static readonly type = '[GAME] Next Turn';\n}\n\nexport class SetStaus {\n  static readonly type = '[GAME] Set Status';\n\n  constructor(public payload: GameStatus) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetStaus.html":{"url":"classes/SetStaus.html","title":"class - SetStaus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetStaus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/actions/game.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: GameStatus)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/actions/game.actions.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        GameStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        payload\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GameStatus\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/actions/game.actions.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[GAME] Set Status'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/actions/game.actions.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GameMode, GameStatus } from '../models/game.model';\n\nexport class SetBoard {\n  static readonly type = '[GAME] Set Board';\n\n  constructor(public payload: Array>) {}\n}\n\nexport class ResetBoard {\n  static readonly type = '[GAME] Reset Board';\n}\n\nexport class SetGameMode {\n  static readonly type = '[GAME] Set Game Mode';\n\n  constructor(public payload: GameMode) {}\n}\n\nexport class SetDiscColor {\n  static readonly type = '[GAME] Set Disc Color';\n\n  constructor(public payload: { player: number; color: string }) {}\n}\n\nexport class AddDisc {\n  static readonly type = '[GAME] Add Disc';\n\n  constructor(public payload: number) {}\n}\n\nexport class NextTurn {\n  static readonly type = '[GAME] Next Turn';\n}\n\nexport class SetStaus {\n  static readonly type = '[GAME] Set Status';\n\n  constructor(public payload: GameStatus) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsDialogComponent.html":{"url":"components/SettingsDialogComponent.html","title":"component - SettingsDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/dialogs/settings-dialog/settings-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-dialog\n            \n\n            \n                styleUrls\n                ./settings-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                darkMode\n                            \n                            \n                                darkMode$\n                            \n                            \n                                discsColor\n                            \n                            \n                                discsColor$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeTheme\n                            \n                            \n                                setDiscColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/dialogs/settings-dialog/settings-dialog.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeTheme\n                        \n                    \n                \n            \n            \n                \nchangeTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/dialogs/settings-dialog/settings-dialog.component.ts:33\n                \n            \n\n\n            \n                \n                    Switch between dark and light mode\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDiscColor\n                        \n                    \n                \n            \n            \n                \nsetDiscColor(player: number, e: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/dialogs/settings-dialog/settings-dialog.component.ts:43\n                \n            \n\n\n            \n                \n                    Set discs color for entered player number\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    player\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number corresponding to player (1 or 2)\n\n                                    \n                                \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event emitted by \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        darkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialogs/settings-dialog/settings-dialog.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        darkMode$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialogs/settings-dialog/settings-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discsColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialogs/settings-dialog/settings-dialog.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        discsColor$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable>\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialogs/settings-dialog/settings-dialog.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { SetDarkMode } from '../../actions/app.actions';\nimport { SetDiscColor } from '../../actions/game.actions';\n\n@Component({\n  selector: 'app-settings-dialog',\n  templateUrl: './settings-dialog.component.html',\n  styleUrls: ['./settings-dialog.component.scss'],\n})\nexport class SettingsDialogComponent {\n  darkMode$: Observable;\n  darkMode = false;\n\n  discsColor$: Observable>;\n  discsColor: Array = [];\n\n  constructor(private store: Store) {\n    this.darkMode$ = this.store.select((state) => state.app.darkMode);\n    this.darkMode$.subscribe((darkMode) => {\n      this.darkMode = darkMode;\n    });\n    this.discsColor$ = this.store.select((state) => state.game.discsColor);\n    this.discsColor$.subscribe((discsColor) => {\n      this.discsColor = discsColor;\n    });\n  }\n\n  /**\n   * Switch between dark and light mode\n   */\n  changeTheme() {\n    this.store.dispatch(new SetDarkMode(!this.darkMode));\n  }\n\n  /**\n   * Set discs color for entered player number\n   *\n   * @param {number} player Number corresponding to player (1 or 2)\n   * @param {any} e The event emitted by \n   */\n  setDiscColor(player: number, e: any) {\n    this.store.dispatch(new SetDiscColor({ player, color: e.target.value }));\n  }\n}\n\n    \n\n    \n        \n    \n        {{'app.settings.custom_your_view' | translate}} \n    \n\n    \n        \n\n            \n                \n                \n            \n\n        \n        \n            {{\"app.settings-dialog.player_1\" | translate}}\n            \n        \n\n        \n            {{\"app.settings-dialog.player_2\" | translate}}\n            \n        \n\n    \n\n    \n        {{\"app.settings-dialog.done\" | translate}}\n    \n\n    \n\n    \n                \n                    ./settings-dialog.component.scss\n                \n                .settings-dialog {\n    height: 300px;\n    width: 300px;\n    padding: 15px;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n}\n\n.settings-dialog__options {\n    flex-grow: 1;\n    display: flex;\n    justify-content: space-around;\n    flex-direction: column;\n}\n\n@media only screen and (max-width: 600px) {\n    .settings-dialog {\n        min-height: -webkit-fill-available;\n        width: 100vw;\n    }\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{\\'app.settings.custom_your_view\\' | translate}}                                                                                                     {{\"app.settings-dialog.player_1\" | translate}}                                        {{\"app.settings-dialog.player_2\" | translate}}                                    {{\"app.settings-dialog.done\" | translate}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DiscComponent', 'selector': 'app-disc'},{'name': 'EndGameDialogComponent', 'selector': 'app-end-game-dialog'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nSettingsDialogComponent\n\nSettingsDialogComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nSettingsDialogComponent->SharedModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nSharedModule -->\n\nToolbarComponent->SharedModule\n\n\n\n\n\nSettingsDialogComponent \n\nSettingsDialogComponent \n\nSettingsDialogComponent  -->\n\nSharedModule->SettingsDialogComponent \n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nSharedModule->ToolbarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/modules/shared/shared.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The shared module\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsDialogComponent\n                        \n                        \n                            ToolbarComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SettingsDialogComponent\n                        \n                        \n                            ToolbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport {\n  TranslateLoader,\n  TranslateModule,\n  TranslatePipe,\n} from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { ToolbarComponent } from '../../components/toolbar/toolbar.component';\nimport { SettingsDialogComponent } from '../../dialogs/settings-dialog/settings-dialog.component';\n\n/**\n * The shared module\n */\n@NgModule({\n  declarations: [ToolbarComponent, SettingsDialogComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient],\n      },\n    }),\n    MatGridListModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSlideToggleModule,\n    MatDialogModule,\n    MatCardModule,\n    MatRadioModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatInputModule,\n    MatMenuModule,\n  ],\n  exports: [ToolbarComponent, SettingsDialogComponent, TranslatePipe],\n})\nexport class SharedModule {}\n\nexport function HttpLoaderFactory(http: HttpClient): TranslateHttpLoader {\n  return new TranslateHttpLoader(http);\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToolbarComponent.html":{"url":"components/ToolbarComponent.html","title":"component - ToolbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToolbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/toolbar/toolbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toolbar\n            \n\n            \n                styleUrls\n                ./toolbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toolbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentLangImg\n                            \n                            \n                                openSettingsDialog\n                            \n                            \n                                quit\n                            \n                            \n                                setLanguage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                quitButton\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, dialog: MatDialog, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/toolbar/toolbar.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        quitButton\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/toolbar/toolbar.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentLangImg\n                        \n                    \n                \n            \n            \n                \ngetCurrentLangImg()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/toolbar/toolbar.component.ts:47\n                \n            \n\n\n            \n                \n                    Get flag image corresponding to current selected language\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Filepath to th flag image\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSettingsDialog\n                        \n                    \n                \n            \n            \n                \nopenSettingsDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/toolbar/toolbar.component.ts:24\n                \n            \n\n\n            \n                \n                    Open settings dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quit\n                        \n                    \n                \n            \n            \n                \nquit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/toolbar/toolbar.component.ts:54\n                \n            \n\n\n            \n                \n                    Navigate to home page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLanguage\n                        \n                    \n                \n            \n            \n                \nsetLanguage(language: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/components/toolbar/toolbar.component.ts:38\n                \n            \n\n\n            \n                \n                    Set app language\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    language\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The language code\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/toolbar/toolbar.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { SettingsDialogComponent } from '../../dialogs/settings-dialog/settings-dialog.component';\n\n@Component({\n  selector: 'app-toolbar',\n  templateUrl: './toolbar.component.html',\n  styleUrls: ['./toolbar.component.scss'],\n})\nexport class ToolbarComponent {\n  constructor(\n    private translate: TranslateService,\n    public dialog: MatDialog,\n    private router: Router\n  ) {}\n\n  @Input() quitButton = false;\n\n  /**\n   * Open settings dialog\n   */\n  openSettingsDialog() {\n    this.dialog.open(SettingsDialogComponent, {\n      maxWidth: '100vw',\n      maxHeight: '100vh',\n      height: 'fit-content',\n      width: 'fit-content',\n    });\n  }\n\n  /**\n   * Set app language\n   *\n   * @param {string} language The language code\n   */\n  setLanguage(language: string) {\n    this.translate.use(language);\n  }\n\n  /**\n   * Get flag image corresponding to current selected language\n   *\n   * @returns {string} Filepath to th flag image\n   */\n  getCurrentLangImg() {\n    return `assets/${this.translate.currentLang}.png`;\n  }\n\n  /**\n   * Navigate to home page\n   */\n  quit() {\n    this.router.navigate(['home']);\n  }\n}\n\n    \n\n    \n        \n    {{ 'app.home.connect_four' | translate }}\n    \n    \n     \n   \n   \n     \n       \n         \n       \n       {{\"app.toolbar.french\" | translate}}\n     \n     \n       \n         \n       \n       {{\"app.toolbar.english\" | translate}}\n     \n   \n    \n     palette\n   \n   \n    exit_to_app\n  \n  \n    \n\n    \n                \n                    ./toolbar.component.scss\n                \n                .spacer {\n  flex: 1 1 auto;\n}\n\n.flag-img {\n  width: inherit;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'app.home.connect_four\\' | translate }}                                                      {{\"app.toolbar.french\" | translate}}                                        {{\"app.toolbar.english\" | translate}}                 palette          exit_to_app    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DiscComponent', 'selector': 'app-disc'},{'name': 'EndGameDialogComponent', 'selector': 'app-end-game-dialog'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'SettingsDialogComponent', 'selector': 'app-settings-dialog'},{'name': 'ToolbarComponent', 'selector': 'app-toolbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToolbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/pages/game/disc/disc.component.ts\n            \n            component\n            DiscComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/pages/game/end-game-dialog/end-game-dialog.component.ts\n            \n            component\n            EndGameDialogComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/pages/game/game.component.ts\n            \n            component\n            GameComponent\n            \n                12 %\n                (2/16)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/services/game.service.ts\n            \n            injectable\n            GameService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/shared/actions/app.actions.ts\n            \n            class\n            SetDarkMode\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/actions/game.actions.ts\n            \n            class\n            AddDisc\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/actions/game.actions.ts\n            \n            class\n            NextTurn\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/actions/game.actions.ts\n            \n            class\n            ResetBoard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/actions/game.actions.ts\n            \n            class\n            SetBoard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/actions/game.actions.ts\n            \n            class\n            SetDiscColor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/actions/game.actions.ts\n            \n            class\n            SetGameMode\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/actions/game.actions.ts\n            \n            class\n            SetStaus\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/components/toolbar/toolbar.component.ts\n            \n            component\n            ToolbarComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/shared/dialogs/settings-dialog/settings-dialog.component.ts\n            \n            component\n            SettingsDialogComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/shared/modules/shared/shared.module.ts\n            \n            function\n            HttpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/states/app.state.ts\n            \n            injectable\n            AppState\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/shared/states/app.state.ts\n            \n            interface\n            AppStateModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/states/game.state.ts\n            \n            injectable\n            GameState\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/shared/states/game.state.ts\n            \n            interface\n            GameStateModel\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.2.0\n        \n            @angular/cdk : ^15.2.1\n        \n            @angular/common : ^15.2.0\n        \n            @angular/compiler : ^15.2.0\n        \n            @angular/core : ^15.2.0\n        \n            @angular/forms : ^15.2.0\n        \n            @angular/material : ^15.2.1\n        \n            @angular/platform-browser : ^15.2.0\n        \n            @angular/platform-browser-dynamic : ^15.2.0\n        \n            @angular/router : ^15.2.0\n        \n            @compodoc/compodoc : ^1.1.19\n        \n            @ngx-translate/core : ^14.0.0\n        \n            @ngx-translate/http-loader : ^7.0.0\n        \n            @ngxs/logger-plugin : ^3.7.6\n        \n            @ngxs/store : ^3.7.6\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GameMode   (src/.../game.model.ts)\n                        \n                        \n                            GameStatus   (src/.../game.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/models/game.model.ts\n    \n        \n            \n                \n                    \n                        \n                        GameMode\n                    \n                \n                        \n                            \n                                 VERSUS_HUMAN\n                            \n                        \n                        \n                            \n                                 VERSUS_AI\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        GameStatus\n                    \n                \n                        \n                            \n                                 IN_PROGRESS\n                            \n                        \n                        \n                            \n                                 FINISHED\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HttpLoaderFactory   (src/.../shared.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/modules/shared/shared.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                                HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TranslateHttpLoader\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nng-connect-four\nNg Connect Four is a two-player connection rack game, in which the players choose a color and then take turns dropping colored tokens into a seven-column, six-row vertically suspended grid. The pieces fall straight down, occupying the lowest available space within the column. The objective of the game is to be the first to form a horizontal, vertical, or diagonal line of four of one's own tokens.\nFeatures\n\nLight/dark mode toggle\nAI opponent\nResponsive\nFast performance\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nDocumentation\nDocumentation\nSupport\nFor support, email fake@fake.com or join our Slack channel.\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_GameModule\n\n\n\ncluster_GameModule_declarations\n\n\n\ncluster_GameModule_imports\n\n\n\ncluster_GameModule_exports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\n\n\nDiscComponent\n\nDiscComponent\n\n\n\nGameModule\n\nGameModule\n\nGameModule -->\n\nDiscComponent->GameModule\n\n\n\n\n\nEndGameDialogComponent\n\nEndGameDialogComponent\n\nGameModule -->\n\nEndGameDialogComponent->GameModule\n\n\n\n\n\nGameComponent\n\nGameComponent\n\nGameModule -->\n\nGameComponent->GameModule\n\n\n\n\n\nEndGameDialogComponent \n\nEndGameDialogComponent \n\nEndGameDialogComponent  -->\n\nGameModule->EndGameDialogComponent \n\n\n\n\n\nGameComponent \n\nGameComponent \n\nGameComponent  -->\n\nGameModule->GameComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\nGameModule -->\n\nSharedModule->GameModule\n\n\n\n\n\nSettingsDialogComponent \n\nSettingsDialogComponent \n\nSettingsDialogComponent  -->\n\nSharedModule->SettingsDialogComponent \n\n\n\n\n\nToolbarComponent \n\nToolbarComponent \n\nToolbarComponent  -->\n\nSharedModule->ToolbarComponent \n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nSettingsDialogComponent\n\nSettingsDialogComponent\n\nSharedModule -->\n\nSettingsDialogComponent->SharedModule\n\n\n\n\n\nToolbarComponent\n\nToolbarComponent\n\nSharedModule -->\n\nToolbarComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
